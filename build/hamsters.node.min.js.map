{"version":3,"sources":["webpack:///webpack/bootstrap e6bdafe660c519c41b65","webpack:///./hamsters.js","webpack:///./core/habitat.js","webpack:///./core/pool.js","webpack:///./core/data.js","webpack:///./core/wheel.js","webpack:///./feature/memoize.js","webpack:///./feature/stores/NodeStore.js","webpack:///./feature/stores/WebStore.js"],"names":["hamstersjs","version","run","hamstersRun","bind","promise","hamstersPromise","init","inititializeLibrary","data","pool","wheel","habitat","memoize","startOptions","Data","Pool","Wheel","Habitat","Memoize","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","console","info","Object","keys","key","includes","toLowerCase","forceLegacyMode","Worker","isIE","params","functionToRun","array","task","input","output","Array","length","scheduler","count","threads","workers","node","hamstersJob","prepareFunction","sharedArray","atomics","indexes","getSubArrayIndexes","sharedBuffer","setupSharedArrayBuffer","debug","metrics","created_at","Date","now","started_at","completed_at","resolve","reject","memoizedFunction","scheduleTask","then","catch","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","importScripts","browser","isBrowser","webWorker","isWebWorker","isNode","reactNative","isReactNative","shell","isShell","transferable","supportsTransferableObjects","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","selectHamsterWheel","sharedWorker","locateSharedWorkerObject","locateBlobBuilder","findAvailableBlobBuilder","isLegacyEnvironment","locateWorkerObject","determineGlobalThreads","getHabitatKeys","max","navigator","hardwareConcurrency","isFirefox","os","cpus","userAgent","indexOf","SharedWorker","window","process","product","isLegacy","supportsSharedWorkers","supports","workerBlob","generateWorkerBlob","SharedHamster","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","blob","append","type","getBlob","workerLogic","URL","createObjectURL","createDataBlob","String","Uint8Array","SharedArrayBuffer","Proxy","regular","running","pending","fetchHamster","getAvailableThread","index","enqueued_at","push","hamster","item","dequeued_at","runTask","threadId","spawnHamster","id","parentPort","hamsterWheel","hamsterFood","getSubArrayFromIndex","hasOwnProperty","prepareMeal","keepTrackOfThread","trainHamster","feedHamster","addWorkToPending","aggregate","aggregateThreadOutputs","dataType","sort","sortOutput","splice","message","messageData","JSON","parse","undefined","mixedOutput","addThreadOutputWithIndex","onThreadResponse","port","onmessage","onmessageerror","onerror","once","processReturn","removeFromRunning","returnOutputAndRemoveTask","processQueuedItem","shift","terminate","setOnMessage","i","getSubArrayUsingIndex","calculateIndexes","sortTaskOutput","processDataType","typedArrayFromBuffer","prepareWorkerTask","messageWorkerThread","getBufferSize","createSharedBuffer","getDataType","postMessage","stringify","buffer","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","functionBody","functionString","substring","arr","order","prototype","call","a","b","reverse","byteLength","constructor","set","reduce","concat","len","bufferLength","offset","outputLength","start","n","end","segmentSize","Math","floor","startIndex","endIndex","slice","worker","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","ports","incomingMessage","eval","buffers","handleDataType","returnResponse","maxSize","store","NodeStore","WebStore","func","generateTaskKey","get","cachedResult","applyFunc","result","hashCode","str","hash","chr","charCodeAt","toString","args","apply","error","cache","Map","has","value","delete","size","oldestKey","next","clear","dbName","storeName","db","initDB","request","indexedDB","open","event","target","onupgradeneeded","objectStoreNames","contains","objectStore","createObjectStore","keyPath","createIndex","unique","onsuccess","transaction","updateTimestamp","checkSize","put","timestamp","countRequest","evictOldest","openCursor","cursor"],"mappings":"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","file":"hamsters.node.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e6bdafe660c519c41b65","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nimport Habitat from './core/habitat';\nimport Pool from './core/pool';\nimport Data from './core/data';\nimport Wheel from './core/wheel';\n\n//Features\nimport Memoize from './feature/memoize';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.version = '5.5.5';\n    this.run = this.hamstersRun.bind(this);\n    this.promise = this.hamstersPromise.bind(this);\n    this.init = this.inititializeLibrary.bind(this);\n    this.data = {};\n    this.pool = {};\n    this.wheel = {};\n    this.habitat = {};\n    this.memoize = {};\n  }\n\n  /**\n  * @function inititializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  inititializeLibrary(startOptions) {\n    this.data = new Data(this);\n    this.pool = new Pool(this);\n    this.wheel = new Wheel(this);\n    this.habitat = new Habitat(this);\n    this.memoize = new Memoize(this, 100); //Set a maximum of 100 memoized function results, LRU cache\n\n    this.processStartOptions(startOptions);\n    \n    if (!this.habitat.legacy && this.habitat.persistence === true) {\n      this.pool.spawnHamsters(this.habitat.maxThreads);\n    }\n    this.maxThreads = this.habitat.maxThreads;\n    console.info(`Hamsters.js ${this.version} initialized using up to ${this.habitat.maxThreads} threads`);\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      for (const key of Object.keys(startOptions)) {\n        if (this.habitat.keys.includes(key.toLowerCase())) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    let forceLegacyMode = (typeof startOptions !== 'undefined' && typeof startOptions.legacy !== 'undefined');\n    if (forceLegacyMode) {\n      forceLegacyMode = startOptions.legacy;\n    }\n    if (typeof this.habitat.Worker === 'function' && !forceLegacyMode) {\n      this.habitat.legacy = this.habitat.isIE;\n    }\n  }\n\n  /**\n   * @constructor\n   * @function hamstersTask - Constructs a new task object from provided arguments\n   * @param {object} params - Provided library execution options\n   * @param {function} functionToRun - Function to execute\n   * @return {object} new Hamsters.js task\n   */\n  hamstersTask(params, functionToRun) {\n    params.array = params.array || [];\n\n    const task = {\n      input: {},\n      output: new Array(params.array.length),\n      scheduler: {\n        count: 0,\n        threads: params.threads || 1,\n        workers: []\n      }\n    };\n\n    if (this.habitat.legacy) {\n      task.scheduler.threads = 1;\n      if (!this.habitat.node && !this.habitat.isIE) {\n        params.hamstersJob = functionToRun;\n      }\n    } else {\n      params.hamstersJob = this.habitat.legacy ? functionToRun : this.data.prepareFunction(functionToRun);\n      if (params.sharedArray && this.habitat.atomics) {\n        task.scheduler.indexes = params.indexes || this.data.getSubArrayIndexes(params.sharedArray, task.scheduler.threads);\n        task.scheduler.sharedBuffer = this.data.setupSharedArrayBuffer(params.sharedArray);\n      } else {\n        task.scheduler.indexes = params.indexes || this.data.getSubArrayIndexes(params.array, task.scheduler.threads);\n      }\n    }\n\n    if (this.habitat.debug) {\n        task.scheduler.metrics = {\n          created_at: Date.now(),\n          started_at: null,\n          completed_at: null,\n          threads: []\n        };\n    }\n\n    // Assign task.input to params\n    task.input = params;\n\n    return task;\n  }\n\n  /**\n   * @async\n   * @function scheduleTask - Schedules a new function to be processed by the library\n   * @param {object} task - Provided library execution options\n   * @param {function} resolve - Parent function promise resolve method\n   * @param {function} reject - Parent function promise reject method\n   * @return {Promise} Promise object on completion\n   */\n  scheduleTask(task, resolve, reject) {\n    if (task.input.memoize) {\n      // Pass the task object to the memoized function\n      const memoizedFunction = this.memoize.memoize(() => this.pool.scheduleTask(task));\n      return memoizedFunction(task).then(resolve).catch(reject);\n    } else {\n      return this.pool.scheduleTask(task)\n        .then(resolve)\n        .catch(reject);\n    }\n  }\n  \n\n\n  /**\n   * @async\n   * @function hamstersPromise - Calls library functionality using async promises\n   * @param {object} params - Provided library execution options\n   * @param {function} functionToRun - Function to execute\n   * @return {Promise} Promise resolving with results from functionToRun\n   */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      this.scheduleTask(this.hamstersTask(params, functionToRun), resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    this.scheduleTask(this.hamstersTask(params, functionToRun), onSuccess, onError);\n  }\n}\n\nconst hamsters = new hamstersjs();\n\nmodule.exports = hamsters;\n\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferable = this.supportsTransferableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer();\n    this.selectHamsterWheel = this.selectHamsterWheel.bind(this);\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.locateBlobBuilder = this.findAvailableBlobBuilder();\n    this.legacy = this.isLegacyEnvironment();\n    this.Worker = this.locateWorkerObject();\n    this.maxThreads = this.determineGlobalThreads();\n    this.keys = this.getHabitatKeys();\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(this.browser && typeof navigator.hardwareConcurrency !== \"undefined\") {\n      max = navigator.hardwareConcurrency;\n      if(this.isFirefox()) {\n        max = (max > 20 ? 20 : max);\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function isFirefox - Detect firefox browser\n  */\n  isFirefox() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return (typeof Worker !== 'undefined' ? Worker : false);\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return (typeof SharedWorker !== 'undefined' ? SharedWorker : false);\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return (typeof window === \"object\");\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.indexOf(\"MSIE \") !== -1 || navigator.userAgent.indexOf(\"Trident/\") !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return (typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser);\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a web worker\n  */\n  isWebWorker() {\n    return (typeof importScripts === \"function\" && !this.isReactNative());\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is React Native\n  */\n  isReactNative() {\n    return (typeof navigator !== \"undefined\" && typeof navigator.product !== \"undefined\" && navigator.product === \"ReactNative\");\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return ((typeof navigator === \"undefined\") && !this.isNode() && !this.isWebWorker() && !this.isReactNative());\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = !!!this.Worker;\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy;\n  }\n\n  /**\n  * @function supportsSharedWorkers - Detects if execution environment supports SharedWorkers\n  */\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = this.generateWorkerBlob(this.selectHamsterWheel());\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function findAvailableBlobBuilder - Attempts to locate a data blob builder, with vendor prefixes\n  */\n  findAvailableBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return 'Environment does not support data blobs!';\n  }\n\n  /**\n  * @function createDataBlob - Creates a new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates a blob URI for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    return  URL.createObjectURL(this.createDataBlob('(' + String(workerLogic) + ')();'));\n  }\n\n  /**\n  * @function supportsTransferableObjects - Detects if execution environment supports typed arrays\n  */\n  supportsTransferableObjects() {\n    return (typeof Uint8Array !== 'undefined');\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports SharedArrayBuffers\n  */\n  supportsAtomicOperations() {\n    return (typeof SharedArrayBuffer !== 'undefined');\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports Proxy objects\n  */\n  supportsProxies() {\n    return (typeof Proxy !== 'undefined');\n  }\n\n  /**\n  * @function selectHamsterWheel - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE) {\n      return this.hamsters.wheel.legacy;\n    }\n    if(this.reactNative) {\n      return 'reactNativeHamster.js';\n    }\n    if (this.node) {\n      return './node_modules/hamsters.js/build/common/node.js';\n    }\n    return this.generateWorkerBlob(this.hamsters.wheel.regular);\n  }\n\n  /**\n  * @function getHabitatKeys - Returns keys for this Habitat instance\n  */\n  getHabitatKeys() {\n    return [\n      'worker','sharedworker',\n      'legacy','proxies',\n      'reactnative','atomics',\n      'transferable','browser',\n      'shell','node','debug',\n      'persistence','importscripts',\n      'maxthreads', 'parentport',\n      'webworker',\n    ];\n  }\n}\n\nexport default Habitat;\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Pool {\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.getAvailableThread.bind(this);\n  }\n\n  /**\n  * @function addWorkToPending - Adds task to queue waiting for available thread\n  * @param {number} index - Index of the task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(index, task, resolve, reject) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[task.scheduler.count].enqueued_at = Date.now();\n    }\n    this.pending.push({\n      index,\n      count: task.scheduler.count,  \n      task,\n      resolve,\n      reject\n    });\n  }\n\n  /**\n  * @function processQueuedItem - Invokes processing of next item in queue\n  * @param {object} hamster - The thread to run the task\n  * @param {object} item - Task to process\n  */\n  processQueuedItem(hamster, item) {\n    if (this.hamsters.habitat.debug) {\n      item.task.scheduler.metrics.threads[item.count].dequeued_at = Date.now();\n    }\n    return this.runTask(hamster, item.index, item.task, item.resolve, item.reject);\n  }\n\n  /**\n  * @function getAvailableThread - Gets an available thread\n  * @param {number} threadId - Id of the thread\n  * @returns {object} - The available thread\n  */\n  getAvailableThread(threadId) {\n    if (this.hamsters.habitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[id].started_at = Date.now();\n    }\n    task.scheduler.workers.push(id);\n    this.running.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {number} maxThreads - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    while (maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    const { selectHamsterWheel, SharedWorker, Worker, node, parentPort } = this.hamsters.habitat;\n    const hamsterWheel = selectHamsterWheel();\n    if (this.hamsters.habitat.webWorker) {\n      return new SharedWorker(hamsterWheel, 'SharedHamsterWheel');\n    }\n    if (node && typeof parentPort !== 'undefined') {\n      return new Worker(hamsterWheel);\n    }\n    return new Worker(hamsterWheel);\n  }\n\n  /**\n  * @function prepareMeal - Prepares message to send to a thread and invoke execution\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @return {object} - Prepared message to send to a thread\n  */\n  prepareMeal(index, task) {\n    const hamsterFood = { array: this.hamsters.data.getSubArrayFromIndex(index, task) };\n    for (const key in task.input) {\n      if (task.input.hasOwnProperty(key) && !['array', 'threads'].includes(key)) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  /**\n  * @function runTask - Runs function using thread\n  * @param {object} hamster - The thread to run the task\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, index, task, resolve, reject) {\n    const threadId = this.running.length;\n    const hamsterFood = this.prepareMeal(index, task);\n    this.keepTrackOfThread(task, threadId);\n    if (this.hamsters.habitat.legacy) {\n      this.hamsters.wheel.legacy(hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(index, task, threadId, hamster, resolve, reject);\n      this.hamsters.data.feedHamster(hamster, hamsterFood);\n    }\n    task.scheduler.count += 1;\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(index, task, resolve, reject) {\n    if (this.hamsters.habitat.maxThreads <= this.running.length) {\n      return this.addWorkToPending(index, task, resolve, reject);\n    }\n    const hamster = this.fetchHamster(this.running.length);\n    return this.runTask(hamster, index, task, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - Gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    let output = task.output;\n    if(task.input.aggregate) {\n      output = this.hamsters.data.aggregateThreadOutputs(task.output, task.input.dataType);\n    }\n    if(task.input.sort) {\n      output = this.hamsters.data.sortOutput(task.output, task.input.sort)\n    }\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.completed_at = Date.now();\n      console.info(\"Hamsters.js Task Completed: \", task);\n    }\n    resolve(output);\n  }\n\n  /**\n  * @function removeFromRunning - Removes a thread from the running pool\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to remove\n  */\n  removeFromRunning(task, threadId) {\n    this.running.splice(this.running.indexOf(threadId), 1);\n    task.scheduler.workers.splice(task.scheduler.workers.indexOf(threadId), 1);\n  }\n\n  /**\n   * @function processReturn - Processes the returned message from a thread\n   * @param {number} index - Index of the subarray processed\n   * @param {object} message - Message returned from the thread\n   * @param {number} threadId - Id of thread returning response\n   * @param {object} task - Provided library functionality options for this task\n   */\n  processReturn(index, message, threadId, task) {\n    const isReactNative = this.hamsters.habitat.reactNative;\n    const messageData = isReactNative ? JSON.parse(message).data : message.data.data !== undefined ? message.data.data : message.data;\n    \n    if (task.scheduler.threads !== 1) {\n        if (isReactNative || task.input.mixedOutput) {\n          task.output[threadId] = messageData;\n        } else {\n          this.hamsters.data.addThreadOutputWithIndex(task, index, messageData);\n        }\n    } else {\n        task.output = messageData;\n    }\n  }\n\n\n  /**\n  * @function setOnMessage - Sets the message handlers for a thread\n  * @param {object} hamster - The thread to set the handlers on\n  * @param {function} onThreadResponse - Handler for thread response\n  * @param {object} habitat - Habitat configuration\n  * @param {function} reject - onError method\n  */\n  setOnMessage(hamster, onThreadResponse, reject) {\n    if (this.hamsters.habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = reject;\n      hamster.port.onerror = reject;\n    } else if (this.hamsters.habitat.node) {\n      hamster.once('message', onThreadResponse);\n      hamster.once('onmessageerror', reject);\n      hamster.once('error', reject);\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = reject;\n      hamster.onerror = reject;\n    }\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to train\n  * @param {object} hamster - The thread to train\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(index, task, threadId, hamster, resolve, reject) {\n    const onThreadResponse = (message) => {\n      this.hamsters.pool.processReturn(index, message, threadId, task);\n      if (this.hamsters.habitat.debug) {\n        task.scheduler.metrics.threads[threadId].completed_at = Date.now();\n      }\n      this.hamsters.pool.removeFromRunning(task, threadId);\n      if (task.scheduler.workers.length === 0 && task.scheduler.count === task.scheduler.threads) {\n        this.hamsters.pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (this.hamsters.pool.pending.length !== 0) {\n        return this.hamsters.pool.processQueuedItem(hamster, this.hamsters.pool.pending.shift());\n      }\n      if (!this.hamsters.habitat.persistence) {\n        return hamster.terminate();\n      }\n    };\n    this.hamsters.pool.setOnMessage(hamster, onThreadResponse, reject);\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  */\n  scheduleTask(task) {\n    let i = 0;\n    if(this.hamsters.habitat.debug) {\n      let metrics = task.scheduler.metrics;\n      metrics.started_at = Date.now();\n      return new Promise((resolve, reject) => {\n        while (i < task.scheduler.threads) {\n          metrics.threads.push({\n            created_at: Date.now(),\n            started_at: null,\n            enqueued_at: null,\n            dequeued_at: null,\n            completed_at: null\n          });\n          this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n          i += 1;\n        }\n      });\n    }\n    //Process with debug mode disabled, no need for time stamping\n  \treturn new Promise((resolve, reject) => {\n      while (i < task.scheduler.threads) {\n        this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n}\n\nmodule.exports = Pool;\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","class Data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters; // Set the hamsters object as a property of Data class\n    this.getSubArrayFromIndex = this.getSubArrayUsingIndex.bind(this); // Bind getSubArrayUsingIndex function\n    this.getSubArrayIndexes = this.calculateIndexes.bind(this); // Bind calculateIndexes function\n    this.sortOutput = this.sortTaskOutput.bind(this); // Bind sortTaskOutput function\n    this.aggregateThreadOutputs = this.aggregateThreadOutputs.bind(this);\n    this.processDataType = this.typedArrayFromBuffer;\n    this.prepareFunction = this.prepareWorkerTask.bind(this); // Bind prepareWorkerTask function\n    this.feedHamster = this.messageWorkerThread.bind(this); // Bind messageWorkerThread function\n    this.getBufferSize = this.getBufferSize;\n    this.createSharedBuffer = this.createSharedBuffer.bind(this);\n    this.getDataType = this.getDataType;\n    this.setupSharedArrayBuffer = this.setupSharedArrayBuffer.bind(this);\n  }\n\n  /**\n  * @function messageWorkerThread - Prepares message to send to thread\n  * @param {object} hamstersHabitat - Hamsters Habitat instance\n  * @param {Worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorkerThread(hamster, hamsterFood) {\n    if(this.hamsters.habitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (this.hamsters.habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if(typeof hamsterFood.array.buffer !== 'undefined') {\n      return hamster.postMessage(hamsterFood, [hamsterFood.array.buffer]);\n    } else {\n      return hamster.postMessage(hamsterFood);\n    }\n  }\n\n  /**\n  * @function typedArrayFromBuffer - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'Uint32': Uint32Array,\n      'Uint16': Uint16Array,\n      'Uint8': Uint8Array,\n      'Uint8clamped': Uint8ClampedArray,\n      'Int32': Int32Array,\n      'Int16': Int16Array,\n      'Int8': Int8Array,\n      'Float32': Float32Array,\n      'Float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return buffer;\n    }\n    return new types[dataType](buffer);\n  }\n\n  /**\n  * @function prepareWorkerTask - Prepares function for thread, strips whitespace\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareWorkerTask(functionBody) {\n    let functionString = String(functionBody);\n    return functionString.substring((functionString.indexOf(\"{\") + 1), (functionString.length -1));\n  }\n\n  /**\n  * @function sortTaskOutput - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortTaskOutput(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n   * @function getBufferSize - Gets the byte length of the input array\n   * @param {TypedArray} array - The input typed array\n   * @returns {number} - The byte length of the array\n   */\n  getBufferSize(array) {\n    return array.byteLength;\n  }\n\n  /**\n   * @function createSharedBuffer - Creates a SharedArrayBuffer based on the input array's byte length\n   * @param {TypedArray} array - The input typed array\n   * @returns {SharedArrayBuffer} - The created SharedArrayBuffer\n   */\n  createSharedBuffer(array) {\n    const byteLength = this.getBufferSize(array);\n    const sharedBuffer = new SharedArrayBuffer(byteLength);\n    const sharedArray = new array.constructor(sharedBuffer);\n\n    // Copy data from the input array to the shared array\n    sharedArray.set(array);\n\n    return sharedBuffer;\n  }\n\n  /**\n   * @function setupSharedArrayBuffer - Sets up the shared buffer and corresponding typed array\n   * @param {TypedArray} array - The input typed array\n   * @returns {object} - SharedArrayBuffer;\n   */\n  setupSharedArrayBuffer(array) {\n    return this.createSharedBuffer(array);\n  }\n\n  /**\n  * @function aggregateThreadOutputs - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  aggregateThreadOutputs(input, dataType) {\n    if(!dataType) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  /**\n  * @function addThreadOutputWithIndex - Joins individual thread outputs into single result\n  * @param {object} task - Hamsters task object\n  * @param {object} index - Index information\n  * @param {array} output - Output array\n  */\n  addThreadOutputWithIndex(task, index, output) {\n    let i = 0;\n    const outputLength = output.length;\n    for (i; i < outputLength; i++) {\n      task.output[(index.start + i)] = output[i];\n    }\n  }\n\n  /**\n   * @function calculateIndexes - Splits a single array into multiple equal sized subarrays\n   * @param {array} array - Array to split\n   * @param {number} n - Number of subarrays to create\n   */\n  calculateIndexes(array, n) {\n    // If n is 1, return the whole array range\n    if (n === 1) {\n      return [{ start: 0, end: array.length - 1 }];\n    }\n\n    const indexes = [];\n    const segmentSize = Math.floor(array.length / n);\n    let startIndex = 0;\n\n    for (let i = 0; i < n; i++) {\n      const endIndex = startIndex + segmentSize - 1;\n      indexes.push({ start: startIndex, end: endIndex });\n      startIndex = endIndex + 1;\n    }\n\n    // Adjust the last segment to cover any remaining elements\n    if (startIndex < array.length) {\n      indexes[n - 1].end = array.length - 1;\n    }\n\n    return indexes;\n  }\n  \n\n  /**\n  * @function getSubArrayUsingIndex - Slices subarray based on provided index\n  * @param {object} index - Index information\n  * @param {object} task - Hamsters task object\n  */\n  getSubArrayUsingIndex(index, task) {\n    return task.input.array.slice(index.start, index.end + 1);\n  }\n}\n\nexport default Data;\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","class Wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold.bind(this);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      var port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        this.params = incomingMessage.data;\n        this.rtn = {\n          data: [],\n          dataType: this.params.dataType\n        };\n        eval(\"(\" + this.params.hamstersJob + \")\")();\n        port.postMessage(this.rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function regularScaffold - Provides worker body for library functionality\n  */\n  regularScaffold() {\n    self.params = {};\n    self.rtn = {};\n  \n    self.onmessage = function(message) {\n      this.params = message.data;\n      this.rtn = {\n        data: [],\n        dataType: (typeof this.params.dataType !== 'undefined' ? this.params.dataType : null),\n        index: this.params.index\n      };\n      if(this.params.sharedBuffer) {\n        this.params.sharedArray = typedArrayFromBuffer(this.params.dataType, this.params.sharedBuffer)\n      }\n      eval(this.params.hamstersJob);\n      const buffers = handleDataType(this.rtn); // Call the function to handle data type\n      returnResponse(this.rtn, buffers);\n    }.bind(this);\n\n    handleDataType = function(rtn) {\n      if (this.params.sharedArray) {\n        //Do nothing here, we don't need to return a buffer rtn.data is useless here\n      } else if (rtn.dataType) {\n        // Convert rtn.data to typed array if dataType is specified\n        rtn.data = typedArrayFromBuffer(rtn.dataType, rtn.data);\n      }\n    }.bind(this);\n  \n    function typedArrayFromBuffer(dataType, buffer) {\n      var types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n  \n    function returnResponse(rtn, buffers) {\n      if (buffers && buffers.length > 0) {\n        // If there are buffers, postMessage with transferable objects\n        postMessage(rtn, buffers);\n      } else {\n        // Otherwise, postMessage without transferable objects\n        postMessage(rtn);\n      }\n    }\n  }\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(params, resolve, reject) {\n    var rtn = {\n      data: [],\n      dataType: (typeof params.dataType !== \"undefined\" ? params.dataType : null)\n    };\n    if(this.hamsters.habitat.reactNative) {\n      self.rtn = rtn;\n    }\n    if(this.hamsters.habitat.node || this.hamsters.habitat.isIE) {\n      eval(params.hamstersJob);\n    } else {\n      params.hamstersJob();\n    }\n    resolve(rtn.data);\n  }\n}\n\nexport default Wheel;\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","import NodeStore from './stores/NodeStore';\nimport WebStore from './stores/WebStore';\n\nclass Memoize {\n    constructor(hamsters, maxSize) {\n        this.hamsters = hamsters;\n        this.store = this.hamsters.habitat.node ? new NodeStore(maxSize) : new WebStore('hamstersjs', 'cacheStore', maxSize);\n    }\n\n    memoize(func) {\n        const self = this;\n        return function(task) {\n            const key = self.generateTaskKey(task);\n\n            return new Promise(function(resolve, reject) {\n                self.store.get(key).then(function(cachedResult) {\n                    if (cachedResult !== null) {\n                        resolve(cachedResult);\n                    } else {\n                        self.applyFunc(func, task).then(function(result) {\n                            self.store.set(key, result).then(function() {\n                                resolve(result);\n                            }).catch(reject);\n                        }).catch(reject);\n                    }\n                }).catch(reject);\n            });\n        };\n    }\n\n    generateTaskKey(task) {\n        const key = JSON.stringify({ input: task.input });\n        return this.hashCode(key);\n    }\n\n    hashCode(str) {\n        let hash = 0, i, chr;\n        if (str.length === 0) return hash;\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash.toString();\n    }\n\n    applyFunc(func, args) {\n        return new Promise((resolve, reject) => {\n            try {\n                const result = func.apply(null, args);\n                resolve(result);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n}\n\nexport default Memoize;\n\n\n// WEBPACK FOOTER //\n// ./feature/memoize.js","class NodeStore {\n    constructor(maxSize) {\n        this.maxSize = maxSize;\n        this.cache = new Map();\n    }\n\n    get(key) {\n        if (this.cache.has(key)) {\n            const value = this.cache.get(key);\n            // Refresh the key\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            return Promise.resolve(value);\n        }\n        return Promise.resolve(null);\n    }\n\n    set(key, value) {\n        if (this.cache.size >= this.maxSize) {\n            // Remove the oldest (least recently used) entry\n            const oldestKey = this.cache.keys().next().value;\n            this.cache.delete(oldestKey);\n        }\n        this.cache.set(key, value);\n        return Promise.resolve();\n    }\n\n    clear() {\n        this.cache.clear();\n        return Promise.resolve();\n    }\n}\n\nexport default NodeStore;\n\n\n\n// WEBPACK FOOTER //\n// ./feature/stores/NodeStore.js","class WebStore {\n    constructor(dbName, storeName, maxSize) {\n        this.dbName = dbName;\n        this.storeName = storeName;\n        this.maxSize = maxSize;\n        this.db = null;\n        this.initDB();\n    }\n\n    initDB() {\n        const self = this;\n        const request = indexedDB.open(this.dbName, 1);\n\n        request.onerror = function(event) {\n            console.error('Error opening database:', event.target.error);\n        };\n\n        request.onupgradeneeded = function(event) {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains(self.storeName)) {\n                const objectStore = db.createObjectStore(self.storeName, { keyPath: 'key' });\n                objectStore.createIndex('by_key', 'key', { unique: true });\n                objectStore.createIndex('by_timestamp', 'timestamp');\n            }\n        };\n\n        request.onsuccess = function(event) {\n            self.db = event.target.result;\n        };\n    }\n\n    get(key) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve(null);\n                return;\n            }\n\n            const transaction = self.db.transaction([self.storeName], 'readonly');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.get(key);\n\n            request.onsuccess = function(event) {\n                const result = event.target.result;\n                if (result) {\n                    self.updateTimestamp(key).then(() => resolve(result.value)).catch(reject);\n                } else {\n                    resolve(null);\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    set(key, value) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve();\n                return;\n            }\n\n            self.checkSize().then(() => {\n                const transaction = self.db.transaction([self.storeName], 'readwrite');\n                const objectStore = transaction.objectStore(self.storeName);\n                const request = objectStore.put({ key: key, value: value, timestamp: Date.now() });\n\n                request.onsuccess = function() {\n                    resolve();\n                };\n\n                request.onerror = function(event) {\n                    reject(event.target.error);\n                };\n            }).catch(reject);\n        });\n    }\n\n    clear() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve();\n                return;\n            }\n\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.clear();\n\n            request.onsuccess = function() {\n                resolve();\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    checkSize() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readonly');\n            const objectStore = transaction.objectStore(self.storeName);\n            const countRequest = objectStore.count();\n\n            countRequest.onsuccess = function() {\n                const count = countRequest.result;\n                if (count >= self.maxSize) {\n                    self.evictOldest().then(resolve).catch(reject);\n                } else {\n                    resolve();\n                }\n            };\n\n            countRequest.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    evictOldest() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const index = objectStore.index('by_timestamp');\n            const request = index.openCursor(null, 'next');\n\n            request.onsuccess = function(event) {\n                const cursor = event.target.result;\n                if (cursor) {\n                    cursor.delete().onsuccess = function() {\n                        resolve();\n                    };\n                } else {\n                    resolve();\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    updateTimestamp(key) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.get(key);\n\n            request.onsuccess = function(event) {\n                const data = event.target.result;\n                if (data) {\n                    data.timestamp = Date.now();\n                    objectStore.put(data).onsuccess = function() {\n                        resolve();\n                    };\n                } else {\n                    resolve();\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n}\n\nexport default WebStore;\n\n\n\n// WEBPACK FOOTER //\n// ./feature/stores/WebStore.js"],"sourceRoot":""}