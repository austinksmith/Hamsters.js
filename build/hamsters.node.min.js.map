{"version":3,"sources":["webpack:///webpack/bootstrap 8df4fb6c0903f2c1fef9","webpack:///./hamsters.js","webpack:///./core/habitat.js","webpack:///./core/pool.js","webpack:///./core/data.js","webpack:///./core/wheel.js"],"names":["hamstersjs","version","run","hamstersRun","bind","promise","hamstersPromise","init","inititializeLibrary","data","pool","wheel","habitat","startOptions","Data","Pool","Wheel","Habitat","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","console","info","Object","keys","key","includes","toLowerCase","forceLegacyMode","Worker","isIE","params","functionToRun","task","input","output","scheduler","count","threads","workers","node","hamstersJob","prepareFunction","indexes","getSubArrayIndexes","array","debug","metrics","created_at","Date","now","started_at","completed_at","resolve","reject","scheduleTask","then","catch","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","importScripts","memoize","browser","isBrowser","webWorker","isWebWorker","isNode","reactNative","isReactNative","shell","isShell","transferable","supportsTransferableObjects","atomics","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","selectHamsterWheel","sharedWorker","locateSharedWorkerObject","locateBlobBuilder","findAvailableBlobBuilder","isLegacyEnvironment","locateWorkerObject","determineGlobalThreads","getHabitatKeys","max","navigator","hardwareConcurrency","isFirefox","os","cpus","length","userAgent","indexOf","SharedWorker","window","process","product","isLegacy","supportsSharedWorkers","supports","workerBlob","generateWorkerBlob","SharedHamster","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","blob","append","type","getBlob","workerLogic","URL","createObjectURL","createDataBlob","String","Uint8Array","SharedArrayBuffer","Proxy","regular","running","pending","fetchHamster","getAvailableThread","index","enqueued_at","push","hamster","item","dequeued_at","runTask","threadId","spawnHamster","id","parentPort","hamsterWheel","hamsterFood","getSubArrayFromIndex","hasOwnProperty","prepareMeal","keepTrackOfThread","trainHamster","feedHamster","addWorkToPending","aggregate","aggregateThreadOutputs","dataType","sort","sortOutput","splice","message","messageData","JSON","parse","undefined","mixedOutput","addThreadOutputWithIndex","onThreadResponse","port","onmessage","onmessageerror","onerror","once","processReturn","removeFromRunning","returnOutputAndRemoveTask","processQueuedItem","shift","terminate","setOnMessage","i","getSubArrayUsingIndex","calculateIndexes","sortTaskOutput","processDataType","typedArrayFromBuffer","prepareWorkerTask","messageWorkerThread","postMessage","stringify","buffer","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","functionBody","functionString","substring","arr","order","Array","prototype","call","a","b","reverse","reduce","concat","len","bufferLength","offset","set","outputLength","start","n","end","segmentSize","Math","floor","startIndex","endIndex","slice","worker","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","ports","incomingMessage","eval","returnResponse","buffers"],"mappings":"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","file":"hamsters.node.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8df4fb6c0903f2c1fef9","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nimport Habitat from './core/habitat';\nimport Pool from './core/pool';\nimport Data from './core/data';\nimport Wheel from './core/wheel';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.version = '5.5.2';\n    this.run = this.hamstersRun.bind(this);\n    this.promise = this.hamstersPromise.bind(this);\n    this.init = this.inititializeLibrary.bind(this);\n    this.data = {};\n    this.pool = {};\n    this.wheel = {};\n    this.habitat = {};\n  }\n\n  /**\n  * @function inititializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  inititializeLibrary(startOptions) {\n    this.data = new Data(this);\n    this.pool = new Pool(this);\n    this.wheel = new Wheel(this);\n    this.habitat = new Habitat(this);\n    this.processStartOptions(startOptions);\n    if (!this.habitat.legacy && this.habitat.persistence === true) {\n      this.pool.spawnHamsters(this.habitat.maxThreads);\n    }\n    this.maxThreads = this.habitat.maxThreads;\n    console.info(`Hamsters.js ${this.version} initialized using up to ${this.habitat.maxThreads} threads`);\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      for (const key of Object.keys(startOptions)) {\n        if (this.habitat.keys.includes(key.toLowerCase())) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    let forceLegacyMode = (typeof startOptions !== 'undefined' && typeof startOptions.legacy !== 'undefined');\n    if (forceLegacyMode) {\n      forceLegacyMode = startOptions.legacy;\n    }\n    if (typeof this.habitat.Worker === 'function' && !forceLegacyMode) {\n      this.habitat.legacy = this.habitat.isIE;\n    }\n  }\n\n  /**\n   * @constructor\n   * @function hamstersTask - Constructs a new task object from provided arguments\n   * @param {object} params - Provided library execution options\n   * @param {function} functionToRun - Function to execute\n   * @return {object} new Hamsters.js task\n   */\n  hamstersTask(params, functionToRun) {\n    const task = {\n      input: params,\n      output: [],\n      scheduler: {\n        count: 0,\n        threads: params.threads || 1,\n        workers: []\n      }\n    };\n\n    if (this.habitat.legacy) {\n      task.scheduler.threads = 1;\n      if (!this.habitat.node && !this.habitat.isIE) {\n        params.hamstersJob = functionToRun;\n      }\n    } else {\n      params.hamstersJob = this.habitat.legacy ? functionToRun : this.data.prepareFunction(functionToRun);\n      task.scheduler.indexes = params.indexes || this.data.getSubArrayIndexes(params.array, task.scheduler.threads);\n    }\n\n    if (this.habitat.debug) {\n      task.scheduler.metrics = {\n        created_at: Date.now(),\n        started_at: null,\n        completed_at: null,\n        threads: []\n      };\n    }\n\n    return task;\n  }\n\n  /**\n   * @async\n   * @function scheduleTask - Schedules a new function to be processed by the library\n   * @param {object} task - Provided library execution options\n   * @param {function} resolve - Parent function promise resolve method\n   * @param {function} reject - Parent function promise reject method\n   * @return {Promise} Promise object on completion\n   */\n  scheduleTask(task, resolve, reject) {\n    return this.pool.scheduleTask(task)\n      .then(resolve)\n      .catch(reject);\n  }\n\n  /**\n   * @async\n   * @function hamstersPromise - Calls library functionality using async promises\n   * @param {object} params - Provided library execution options\n   * @param {function} functionToRun - Function to execute\n   * @return {Promise} Promise resolving with results from functionToRun\n   */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      this.scheduleTask(this.hamstersTask(params, functionToRun), resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    this.scheduleTask(this.hamstersTask(params, functionToRun), onSuccess, onError);\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferable = this.supportsTransferableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer();\n    this.selectHamsterWheel = this.selectHamsterWheel.bind(this);\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.locateBlobBuilder = this.findAvailableBlobBuilder();\n    this.legacy = this.isLegacyEnvironment();\n    this.Worker = this.locateWorkerObject();\n    this.maxThreads = this.determineGlobalThreads();\n    this.keys = this.getHabitatKeys();\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(this.browser && typeof navigator.hardwareConcurrency !== \"undefined\") {\n      max = navigator.hardwareConcurrency;\n      if(this.isFirefox()) {\n        max = (max > 20 ? 20 : max);\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function isFirefox - Detect firefox browser\n  */\n  isFirefox() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return (typeof Worker !== 'undefined' ? Worker : false);\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return (typeof SharedWorker !== 'undefined' ? SharedWorker : false);\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return (typeof window === \"object\");\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.indexOf(\"MSIE \") !== -1 || navigator.userAgent.indexOf(\"Trident/\") !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return (typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser);\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a web worker\n  */\n  isWebWorker() {\n    return (typeof importScripts === \"function\" && !this.isReactNative());\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is React Native\n  */\n  isReactNative() {\n    return (typeof navigator !== \"undefined\" && typeof navigator.product !== \"undefined\" && navigator.product === \"ReactNative\");\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return ((typeof navigator === \"undefined\") && !this.isNode() && !this.isWebWorker() && !this.isReactNative());\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = !!!this.Worker;\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy;\n  }\n\n  /**\n  * @function supportsSharedWorkers - Detects if execution environment supports SharedWorkers\n  */\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = this.generateWorkerBlob(this.selectHamsterWheel());\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function findAvailableBlobBuilder - Attempts to locate a data blob builder, with vendor prefixes\n  */\n  findAvailableBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return 'Environment does not support data blobs!';\n  }\n\n  /**\n  * @function createDataBlob - Creates a new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates a blob URI for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    return  URL.createObjectURL(this.createDataBlob('(' + String(workerLogic) + ')();'));\n  }\n\n  /**\n  * @function supportsTransferableObjects - Detects if execution environment supports typed arrays\n  */\n  supportsTransferableObjects() {\n    return (typeof Uint8Array !== 'undefined');\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports SharedArrayBuffers\n  */\n  supportsAtomicOperations() {\n    return (typeof SharedArrayBuffer !== 'undefined');\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports Proxy objects\n  */\n  supportsProxies() {\n    return (typeof Proxy !== 'undefined');\n  }\n\n  /**\n  * @function selectHamsterWheel - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE) {\n      return this.hamsters.wheel.legacy;\n    }\n    if(this.reactNative) {\n      return 'reactNativeHamster.js';\n    }\n    if (this.node) {\n      return './node_modules/hamsters.js/build/common/node.js';\n    }\n    return this.generateWorkerBlob(this.hamsters.wheel.regular);\n  }\n\n  /**\n  * @function getHabitatKeys - Returns keys for this Habitat instance\n  */\n  getHabitatKeys() {\n    return [\n      'worker','sharedworker',\n      'legacy','proxies',\n      'reactnative','atomics',\n      'transferable','browser',\n      'shell','node','debug',\n      'persistence','importscripts',\n      'maxthreads', 'parentport',\n      'webworker',\n    ];\n  }\n}\n\nmodule.exports = Habitat;\n\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Pool {\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.getAvailableThread.bind(this);\n  }\n\n  /**\n  * @function addWorkToPending - Adds task to queue waiting for available thread\n  * @param {number} index - Index of the task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(index, task, resolve, reject) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[task.scheduler.count].enqueued_at = Date.now();\n    }\n    this.pending.push({\n      index,\n      count: task.scheduler.count,  \n      task,\n      resolve,\n      reject\n    });\n  }\n\n  /**\n  * @function processQueuedItem - Invokes processing of next item in queue\n  * @param {object} hamster - The thread to run the task\n  * @param {object} item - Task to process\n  */\n  processQueuedItem(hamster, item) {\n    if (this.hamsters.habitat.debug) {\n      item.task.scheduler.metrics.threads[item.count].dequeued_at = Date.now();\n    }\n    return this.runTask(hamster, item.index, item.task, item.resolve, item.reject);\n  }\n\n  /**\n  * @function getAvailableThread - Gets an available thread\n  * @param {number} threadId - Id of the thread\n  * @returns {object} - The available thread\n  */\n  getAvailableThread(threadId) {\n    if (this.hamsters.habitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[id].started_at = Date.now();\n    }\n    task.scheduler.workers.push(id);\n    this.running.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {number} maxThreads - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    while (maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    const { selectHamsterWheel, SharedWorker, Worker, node, parentPort } = this.hamsters.habitat;\n    const hamsterWheel = selectHamsterWheel();\n    if (this.hamsters.habitat.webWorker) {\n      return new SharedWorker(hamsterWheel, 'SharedHamsterWheel');\n    }\n    if (node && typeof parentPort !== 'undefined') {\n      return new Worker(hamsterWheel);\n    }\n    return new Worker(hamsterWheel);\n  }\n\n  /**\n  * @function prepareMeal - Prepares message to send to a thread and invoke execution\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @return {object} - Prepared message to send to a thread\n  */\n  prepareMeal(index, task) {\n    const hamsterFood = { array: this.hamsters.data.getSubArrayFromIndex(index, task) };\n    for (const key in task.input) {\n      if (task.input.hasOwnProperty(key) && !['array', 'threads'].includes(key)) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  /**\n  * @function runTask - Runs function using thread\n  * @param {object} hamster - The thread to run the task\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, index, task, resolve, reject) {\n    const threadId = this.running.length;\n    const hamsterFood = this.prepareMeal(index, task);\n    this.keepTrackOfThread(task, threadId);\n    if (this.hamsters.habitat.legacy) {\n      this.hamsters.wheel.legacy(hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(index, task, threadId, hamster, resolve, reject);\n      this.hamsters.data.feedHamster(hamster, hamsterFood);\n    }\n    task.scheduler.count += 1;\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(index, task, resolve, reject) {\n    if (this.hamsters.habitat.maxThreads <= this.running.length) {\n      return this.addWorkToPending(index, task, resolve, reject);\n    }\n    const hamster = this.fetchHamster(this.running.length);\n    return this.runTask(hamster, index, task, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - Gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    let output = task.output;\n    if(task.input.aggregate) {\n      output = this.hamsters.data.aggregateThreadOutputs(task.output, task.input.dataType);\n    }\n    if(task.input.sort) {\n      output = this.hamsters.data.sortOutput(task.output, task.input.sort)\n    }\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.completed_at = Date.now();\n      console.info(\"Hamsters.js Task Completed: \", task);\n    }\n    resolve(output);\n  }\n\n  /**\n  * @function removeFromRunning - Removes a thread from the running pool\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to remove\n  */\n  removeFromRunning(task, threadId) {\n    this.running.splice(this.running.indexOf(threadId), 1);\n    task.scheduler.workers.splice(task.scheduler.workers.indexOf(threadId), 1);\n  }\n\n  /**\n   * @function processReturn - Processes the returned message from a thread\n   * @param {number} index - Index of the subarray processed\n   * @param {object} message - Message returned from the thread\n   * @param {number} threadId - Id of thread returning response\n   * @param {object} task - Provided library functionality options for this task\n   */\n  processReturn(index, message, threadId, task) {\n    const isReactNative = this.hamsters.habitat.reactNative;\n    const messageData = isReactNative ? JSON.parse(message).data : message.data.data !== undefined ? message.data.data : message.data;\n    \n    if (task.scheduler.threads !== 1) {\n        if (isReactNative || task.input.mixedOutput) {\n          task.output[threadId] = messageData;\n        } else {\n          this.hamsters.data.addThreadOutputWithIndex(task, index, messageData);\n        }\n    } else {\n        task.output = messageData;\n    }\n  }\n\n\n  /**\n  * @function setOnMessage - Sets the message handlers for a thread\n  * @param {object} hamster - The thread to set the handlers on\n  * @param {function} onThreadResponse - Handler for thread response\n  * @param {object} habitat - Habitat configuration\n  * @param {function} reject - onError method\n  */\n  setOnMessage(hamster, onThreadResponse, reject) {\n    if (this.hamsters.habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = reject;\n      hamster.port.onerror = reject;\n    } else if (this.hamsters.habitat.node) {\n      hamster.once('message', onThreadResponse);\n      hamster.once('onmessageerror', reject);\n      hamster.once('error', reject);\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = reject;\n      hamster.onerror = reject;\n    }\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to train\n  * @param {object} hamster - The thread to train\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(index, task, threadId, hamster, resolve, reject) {\n    const onThreadResponse = (message) => {\n      this.hamsters.pool.processReturn(index, message, threadId, task);\n      if (this.hamsters.habitat.debug) {\n        task.scheduler.metrics.threads[threadId].completed_at = Date.now();\n      }\n      this.hamsters.pool.removeFromRunning(task, threadId);\n      if (task.scheduler.workers.length === 0 && task.scheduler.count === task.scheduler.threads) {\n        this.hamsters.pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (this.hamsters.pool.pending.length !== 0) {\n        return pool.processQueuedItem(hamster, pool.pending.shift());\n      }\n      if (!this.hamsters.habitat.persistence) {\n        return hamster.terminate();\n      }\n    };\n    this.hamsters.pool.setOnMessage(hamster, onThreadResponse, reject);\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  */\n  scheduleTask(task) {\n    let i = 0;\n    if(this.hamsters.habitat.debug) {\n      let metrics = task.scheduler.metrics;\n      metrics.started_at = Date.now();\n      return new Promise((resolve, reject) => {\n        while (i < task.scheduler.threads) {\n          metrics.threads.push({\n            created_at: Date.now(),\n            started_at: null,\n            enqueued_at: null,\n            dequeued_at: null,\n            completed_at: null\n          });\n          this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n          i += 1;\n        }\n      });\n    }\n    //Process with debug mode disabled, no need for time stamping\n  \treturn new Promise((resolve, reject) => {\n      while (i < task.scheduler.threads) {\n        this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n}\n\nmodule.exports = Pool;\n\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","class Data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters; // Set the hamsters object as a property of Data class\n    this.getSubArrayFromIndex = this.getSubArrayUsingIndex.bind(this); // Bind getSubArrayUsingIndex function\n    this.getSubArrayIndexes = this.calculateIndexes.bind(this); // Bind calculateIndexes function\n    this.sortOutput = this.sortTaskOutput.bind(this); // Bind sortTaskOutput function\n    this.aggregateThreadOutputs = this.aggregateThreadOutputs;\n    this.processDataType = this.typedArrayFromBuffer;\n    this.prepareFunction = this.prepareWorkerTask.bind(this); // Bind prepareWorkerTask function\n    this.feedHamster = this.messageWorkerThread.bind(this); // Bind messageWorkerThread function\n  }\n\n  /**\n  * @function messageWorkerThread - Prepares message to send to thread\n  * @param {object} hamstersHabitat - Hamsters Habitat instance\n  * @param {Worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorkerThread(hamster, hamsterFood) {\n    if(this.hamsters.habitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (this.hamsters.habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if(typeof hamsterFood.array.buffer !== 'undefined') {\n      hamster.postMessage(hamsterFood, [hamsterFood.array.buffer]);\n    } else {\n      hamster.postMessage(hamsterFood);\n    }\n  }\n\n  /**\n  * @function typedArrayFromBuffer - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n    typedArrayFromBuffer(dataType, buffer) {\n      const types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if(!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n  /**\n  * @function prepareWorkerTask - Prepares function for thread, strips whitespace\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareWorkerTask(functionBody) {\n    let functionString = String(functionBody);\n    return functionString.substring((functionString.indexOf(\"{\") + 1), (functionString.length -1));\n  }\n\n  /**\n  * @function sortTaskOutput - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortTaskOutput(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n  * @function aggregateThreadOutputs - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  aggregateThreadOutputs(input, dataType) {\n    if(!dataType) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  /**\n  * @function addThreadOutputWithIndex - Joins individual thread outputs into single result\n  * @param {object} task - Hamsters task object\n  * @param {object} index - Index information\n  * @param {array} output - Output array\n  */\n  addThreadOutputWithIndex(task, index, output) {\n    let i = 0;\n    let outputLength = output.length;\n    for (i; i < outputLength; i++) {\n      task.output[(index.start + i)] = output[i];\n    }\n  }\n\n  /**\n   * @function calculateIndexes - Splits a single array into multiple equal sized subarrays\n   * @param {array} array - Array to split\n   * @param {number} n - Number of subarrays to create\n   */\n  calculateIndexes(array, n) {\n    // If n is 1, return the whole array range\n    if (n === 1) {\n      return [{ start: 0, end: array.length - 1 }];\n    }\n\n    const indexes = [];\n    const segmentSize = Math.floor(array.length / n);\n    let startIndex = 0;\n\n    for (let i = 0; i < n; i++) {\n      const endIndex = startIndex + segmentSize - 1;\n      indexes.push({ start: startIndex, end: endIndex });\n      startIndex = endIndex + 1;\n    }\n\n    // Adjust the last segment to cover any remaining elements\n    if (startIndex < array.length) {\n      indexes[n - 1].end = array.length - 1;\n    }\n\n    return indexes;\n  }\n  \n\n  /**\n  * @function getSubArrayUsingIndex - Slices subarray based on provided index\n  * @param {object} index - Index information\n  * @param {object} task - Hamsters task object\n  */\n  getSubArrayUsingIndex(index, task) {\n    return task.input.array.slice(index.start, index.end + 1);\n  }\n}\n\nmodule.exports = Data;\n\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","class Wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold.bind(this);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      var port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        this.params = incomingMessage.data;\n        this.rtn = {\n          data: [],\n          dataType: this.params.dataType\n        };\n        eval(\"(\" + this.params.hamstersJob + \")\")();\n        port.postMessage(this.rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function regularScaffold - Provides worker body for library functionality\n  */\n  regularScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    self.onmessage = function(message) {\n      this.params = message.data;\n      this.rtn = {\n        data: [],\n        dataType: (typeof this.params.dataType !== 'undefined' ? this.params.dataType : null)\n      };\n      eval(this.params.hamstersJob);\n      if(this.rtn.dataType) {\n        this.rtn.data = typedArrayFromBuffer(this.rtn.dataType, this.rtn.data);\n      }\n      returnResponse(this.rtn);\n    }.bind(this);\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      var types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function returnResponse(rtn, buffers) {\n      if(typeof rtn.data.buffer !== 'undefined') {\n        postMessage(rtn, [rtn.data.buffer]);\n      } else {\n        postMessage(rtn);\n      }\n    }\n  }\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(params, resolve, reject) {\n    var rtn = {\n      data: [],\n      dataType: (typeof params.dataType !== \"undefined\" ? params.dataType : null)\n    };\n    if(this.hamsters.habitat.reactNative) {\n      self.rtn = rtn;\n    }\n    if(this.hamsters.habitat.node || this.hamsters.habitat.isIE) {\n      eval(params.hamstersJob);\n    } else {\n      params.hamstersJob();\n    }\n    resolve(rtn.data);\n  }\n}\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = Wheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js"],"sourceRoot":""}