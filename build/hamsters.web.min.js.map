{"version":3,"sources":["webpack:///webpack/bootstrap 0f9bfb98eaf270240557","webpack:///./hamsters.js","webpack:///./core/habitat.js","webpack:///../~/node-libs-browser/~/process/browser.js","webpack:///./core/pool.js","webpack:///./core/data.js","webpack:///./core/wheel.js","webpack:///./feature/memoize.js","webpack:///./feature/stores/NodeStore.js","webpack:///./feature/stores/WebStore.js"],"names":["hamstersjs","version","run","hamstersRun","bind","promise","hamstersPromise","init","inititializeLibrary","data","pool","wheel","habitat","memoize","startOptions","Data","Pool","Wheel","Habitat","Memoize","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","console","info","Object","keys","key","includes","toLowerCase","forceLegacyMode","Worker","isIE","params","functionToRun","array","task","input","output","scheduler","count","threads","workers","node","hamstersJob","prepareFunction","sharedArray","atomics","indexes","getSubArrayIndexes","sharedBuffer","setupSharedArrayBuffer","debug","metrics","created_at","Date","now","started_at","completed_at","resolve","reject","memoizedFunction","scheduleTask","then","catch","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","importScripts","browser","isBrowser","webWorker","isWebWorker","isNode","reactNative","isReactNative","shell","isShell","transferable","supportsTransferableObjects","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","selectHamsterWheel","sharedWorker","locateSharedWorkerObject","locateBlobBuilder","findAvailableBlobBuilder","isLegacyEnvironment","locateWorkerObject","determineGlobalThreads","getHabitatKeys","max","navigator","hardwareConcurrency","isFirefox","os","cpus","length","userAgent","indexOf","SharedWorker","window","process","product","isLegacy","supportsSharedWorkers","supports","workerBlob","generateWorkerBlob","SharedHamster","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","blob","append","type","getBlob","workerLogic","URL","createObjectURL","createDataBlob","String","Uint8Array","SharedArrayBuffer","Proxy","regular","running","pending","fetchHamster","getAvailableThread","index","enqueued_at","push","hamster","item","dequeued_at","runTask","threadId","spawnHamster","id","parentPort","hamsterWheel","hamsterFood","getSubArrayFromIndex","excludedKeys","Set","hasOwnProperty","has","prepareMeal","keepTrackOfThread","trainHamster","feedHamster","addWorkToPending","processDataType","dataType","aggregate","aggregateThreadOutputs","sort","sortOutput","splice","message","messageData","JSON","parse","undefined","mixedOutput","addThreadOutputWithIndex","onThreadResponse","port","onmessage","onmessageerror","onerror","once","processReturn","removeFromRunning","returnOutputAndRemoveTask","processQueuedItem","shift","terminate","setOnMessage","i","getSubArrayUsingIndex","calculateIndexes","sortTaskOutput","typedArrayFromBuffer","prepareWorkerTask","messageWorkerThread","getBufferSize","createSharedBuffer","getDataType","postMessage","stringify","buffer","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","functionBody","functionString","substring","arr","order","Array","prototype","call","a","b","reverse","byteLength","constructor","set","reduce","concat","len","bufferLength","offset","outputLength","start","n","end","segmentSize","Math","floor","startIndex","endIndex","slice","worker","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","ports","incomingMessage","eval","buffers","handleDataType","returnResponse","maxSize","store","NodeStore","WebStore","func","generateTaskKey","get","cachedResult","applyFunc","result","hashCode","str","hash","chr","charCodeAt","toString","args","apply","error","cache","Map","value","delete","size","oldestKey","next","clear","dbName","storeName","db","initDB","request","indexedDB","open","event","target","onupgradeneeded","objectStoreNames","contains","objectStore","createObjectStore","keyPath","createIndex","unique","onsuccess","transaction","updateTimestamp","checkSize","put","timestamp","countRequest","evictOldest","openCursor","cursor"],"mappings":"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AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;;;;;;;;;;;ACvLtC;;AAEA;;;;;;;;;KASMF,I;AACJ;;;;AAIA,iBAAYuD,QAAZ,EAAsB;AACpB;;AADoB;;AAGpB,UAAKA,QAAL,GAAgBA,QAAhB;AACA,UAAK5B,OAAL,GAAe,EAAf;AACA,UAAKgG,OAAL,GAAe,EAAf;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,YAAL,GAAoB,KAAKC,kBAAL,CAAwB1I,IAAxB,CAA6B,IAA7B,CAApB;AACD;;AAED;;;;;;;;;;;sCAOiB2I,K,EAAOzG,I,EAAMuB,O,EAASC,M,EAAQ;AAC7C,WAAI,KAAKS,QAAL,CAAc3D,OAAd,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","file":"hamsters.web.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0f9bfb98eaf270240557","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nimport Habitat from './core/habitat';\nimport Pool from './core/pool';\nimport Data from './core/data';\nimport Wheel from './core/wheel';\n\n//Features\nimport Memoize from './feature/memoize';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.version = '5.5.5';\n    this.run = this.hamstersRun.bind(this);\n    this.promise = this.hamstersPromise.bind(this);\n    this.init = this.inititializeLibrary.bind(this);\n    this.data = {};\n    this.pool = {};\n    this.wheel = {};\n    this.habitat = {};\n    this.memoize = {};\n  }\n\n  /**\n  * @function inititializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  inititializeLibrary(startOptions) {\n    this.data = new Data(this);\n    this.pool = new Pool(this);\n    this.wheel = new Wheel(this);\n    this.habitat = new Habitat(this);\n    this.memoize = new Memoize(this, 100); //Set a maximum of 100 memoized function results, LRU cache\n\n    this.processStartOptions(startOptions);\n    \n    if (!this.habitat.legacy && this.habitat.persistence === true) {\n      this.pool.spawnHamsters(this.habitat.maxThreads);\n    }\n    this.maxThreads = this.habitat.maxThreads;\n    console.info(`Hamsters.js ${this.version} initialized using up to ${this.habitat.maxThreads} threads`);\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      for (const key of Object.keys(startOptions)) {\n        if (this.habitat.keys.includes(key.toLowerCase())) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    let forceLegacyMode = (typeof startOptions !== 'undefined' && typeof startOptions.legacy !== 'undefined');\n    if (forceLegacyMode) {\n      forceLegacyMode = startOptions.legacy;\n    }\n    if (typeof this.habitat.Worker === 'function' && !forceLegacyMode) {\n      this.habitat.legacy = this.habitat.isIE;\n    }\n  }\n\n  /**\n   * @constructor\n   * @function hamstersTask - Constructs a new task object from provided arguments\n   * @param {object} params - Provided library execution options\n   * @param {function} functionToRun - Function to execute\n   * @return {object} new Hamsters.js task\n   */\n  hamstersTask(params, functionToRun) {\n    params.array = params.array || [];\n    const task = {\n      input: {},\n      output: [],\n      scheduler: {\n        count: 0,\n        threads: params.threads || 1,\n        workers: []\n      }\n    };\n\n    if (this.habitat.legacy) {\n      task.scheduler.threads = 1;\n      if (!this.habitat.node && !this.habitat.isIE) {\n        params.hamstersJob = functionToRun;\n      }\n    } else {\n      params.hamstersJob = this.habitat.legacy ? functionToRun : this.data.prepareFunction(functionToRun);\n      if (params.sharedArray && this.habitat.atomics) {\n        task.scheduler.indexes = params.indexes || this.data.getSubArrayIndexes(params.sharedArray, task.scheduler.threads);\n        task.scheduler.sharedBuffer = this.data.setupSharedArrayBuffer(params.sharedArray);\n      } else {\n        task.scheduler.indexes = params.indexes || this.data.getSubArrayIndexes(params.array, task.scheduler.threads);\n      }\n    }\n\n    if (this.habitat.debug) {\n        task.scheduler.metrics = {\n          created_at: Date.now(),\n          started_at: null,\n          completed_at: null,\n          threads: []\n        };\n    }\n\n    // Assign task.input to params\n    task.input = params;\n\n    return task;\n  }\n\n  /**\n   * @async\n   * @function scheduleTask - Schedules a new function to be processed by the library\n   * @param {object} task - Provided library execution options\n   * @param {function} resolve - Parent function promise resolve method\n   * @param {function} reject - Parent function promise reject method\n   * @return {Promise} Promise object on completion\n   */\n  scheduleTask(task, resolve, reject) {\n    if (task.input.memoize) {\n      // Pass the task object to the memoized function\n      const memoizedFunction = this.memoize.memoize(() => this.pool.scheduleTask(task));\n      return memoizedFunction(task).then(resolve).catch(reject);\n    } else {\n      return this.pool.scheduleTask(task)\n        .then(resolve)\n        .catch(reject);\n    }\n  }\n  \n\n\n  /**\n   * @async\n   * @function hamstersPromise - Calls library functionality using async promises\n   * @param {object} params - Provided library execution options\n   * @param {function} functionToRun - Function to execute\n   * @return {Promise} Promise resolving with results from functionToRun\n   */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      this.scheduleTask(this.hamstersTask(params, functionToRun), resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    this.scheduleTask(this.hamstersTask(params, functionToRun), onSuccess, onError);\n  }\n}\n\nconst hamsters = new hamstersjs();\n\nmodule.exports = hamsters;\n\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferable = this.supportsTransferableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer();\n    this.selectHamsterWheel = this.selectHamsterWheel.bind(this);\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.locateBlobBuilder = this.findAvailableBlobBuilder();\n    this.legacy = this.isLegacyEnvironment();\n    this.Worker = this.locateWorkerObject();\n    this.maxThreads = this.determineGlobalThreads();\n    this.keys = this.getHabitatKeys();\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(this.browser && typeof navigator.hardwareConcurrency !== \"undefined\") {\n      max = navigator.hardwareConcurrency;\n      if(this.isFirefox()) {\n        max = (max > 20 ? 20 : max);\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function isFirefox - Detect firefox browser\n  */\n  isFirefox() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return (typeof Worker !== 'undefined' ? Worker : false);\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return (typeof SharedWorker !== 'undefined' ? SharedWorker : false);\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return (typeof window === \"object\");\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.indexOf(\"MSIE \") !== -1 || navigator.userAgent.indexOf(\"Trident/\") !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return (typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser);\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a web worker\n  */\n  isWebWorker() {\n    return (typeof importScripts === \"function\" && !this.isReactNative());\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is React Native\n  */\n  isReactNative() {\n    return (typeof navigator !== \"undefined\" && typeof navigator.product !== \"undefined\" && navigator.product === \"ReactNative\");\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return ((typeof navigator === \"undefined\") && !this.isNode() && !this.isWebWorker() && !this.isReactNative());\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = !!!this.Worker;\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy;\n  }\n\n  /**\n  * @function supportsSharedWorkers - Detects if execution environment supports SharedWorkers\n  */\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = this.generateWorkerBlob(this.selectHamsterWheel());\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function findAvailableBlobBuilder - Attempts to locate a data blob builder, with vendor prefixes\n  */\n  findAvailableBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return 'Environment does not support data blobs!';\n  }\n\n  /**\n  * @function createDataBlob - Creates a new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates a blob URI for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    return  URL.createObjectURL(this.createDataBlob('(' + String(workerLogic) + ')();'));\n  }\n\n  /**\n  * @function supportsTransferableObjects - Detects if execution environment supports typed arrays\n  */\n  supportsTransferableObjects() {\n    return (typeof Uint8Array !== 'undefined');\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports SharedArrayBuffers\n  */\n  supportsAtomicOperations() {\n    return (typeof SharedArrayBuffer !== 'undefined');\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports Proxy objects\n  */\n  supportsProxies() {\n    return (typeof Proxy !== 'undefined');\n  }\n\n  /**\n  * @function selectHamsterWheel - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE) {\n      return this.hamsters.wheel.legacy;\n    }\n    if(this.reactNative) {\n      return 'reactNativeHamster.js';\n    }\n    if (this.node) {\n      return './node_modules/hamsters.js/build/common/node.js';\n    }\n    return this.generateWorkerBlob(this.hamsters.wheel.regular);\n  }\n\n  /**\n  * @function getHabitatKeys - Returns keys for this Habitat instance\n  */\n  getHabitatKeys() {\n    return [\n      'worker','sharedworker',\n      'legacy','proxies',\n      'reactnative','atomics',\n      'transferable','browser',\n      'shell','node','debug',\n      'persistence','importscripts',\n      'maxthreads', 'parentport',\n      'webworker',\n    ];\n  }\n}\n\nexport default Habitat;\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/node-libs-browser/~/process/browser.js\n// module id = 3\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Pool {\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.getAvailableThread.bind(this);\n  }\n\n  /**\n  * @function addWorkToPending - Adds task to queue waiting for available thread\n  * @param {number} index - Index of the task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(index, task, resolve, reject) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[task.scheduler.count].enqueued_at = Date.now();\n    }\n    this.pending.push({\n      index,\n      count: task.scheduler.count,  \n      task,\n      resolve,\n      reject\n    });\n  }\n\n  /**\n  * @function processQueuedItem - Invokes processing of next item in queue\n  * @param {object} hamster - The thread to run the task\n  * @param {object} item - Task to process\n  */\n  processQueuedItem(hamster, item) {\n    if (this.hamsters.habitat.debug) {\n      item.task.scheduler.metrics.threads[item.count].dequeued_at = Date.now();\n    }\n    return this.runTask(hamster, item.index, item.task, item.resolve, item.reject);\n  }\n\n  /**\n  * @function getAvailableThread - Gets an available thread\n  * @param {number} threadId - Id of the thread\n  * @returns {object} - The available thread\n  */\n  getAvailableThread(threadId) {\n    if (this.hamsters.habitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[id].started_at = Date.now();\n    }\n    task.scheduler.workers.push(id);\n    this.running.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {number} maxThreads - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    while (maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    const { selectHamsterWheel, SharedWorker, Worker, node, parentPort } = this.hamsters.habitat;\n    const hamsterWheel = selectHamsterWheel();\n    if (this.hamsters.habitat.webWorker) {\n      return new SharedWorker(hamsterWheel, 'SharedHamsterWheel');\n    }\n    if (node && typeof parentPort !== 'undefined') {\n      return new Worker(hamsterWheel);\n    }\n    return new Worker(hamsterWheel);\n  }\n\n  /**\n   * @function prepareMeal - Prepares message to send to a thread and invoke execution\n   * @param {number} index - Index of the subarray to process\n   * @param {object} task - Provided library functionality options for this task\n   * @return {object} - Prepared message to send to a thread\n   */\n  prepareMeal(index, task) {\n    const hamsterFood = {\n      array: task.input.array.length !== 0 ? this.hamsters.data.getSubArrayFromIndex(index, task) : [],\n      index: index\n    };\n    \n    if(typeof task.scheduler.sharedBuffer !== \"undefined\") {\n      hamsterFood.sharedBuffer = task.scheduler.sharedBuffer;\n    }\n\n    const excludedKeys = new Set(['array', 'threads', 'sharedArray']);\n    \n    for (const key in task.input) {\n      if (task.input.hasOwnProperty(key) && !excludedKeys.has(key)) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n\n    return hamsterFood;\n  }\n\n\n  /**\n  * @function runTask - Runs function using thread\n  * @param {object} hamster - The thread to run the task\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, index, task, resolve, reject) {\n    const threadId = this.running.length;\n    const hamsterFood = this.prepareMeal(index, task);\n    this.keepTrackOfThread(task, threadId);\n    if (this.hamsters.habitat.legacy) {\n      this.hamsters.wheel.legacy(hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(index, task, threadId, hamster, resolve, reject);\n      this.hamsters.data.feedHamster(hamster, task, hamsterFood);\n    }\n    task.scheduler.count += 1;\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(index, task, resolve, reject) {\n    if (this.hamsters.habitat.maxThreads <= this.running.length) {\n      return this.addWorkToPending(index, task, resolve, reject);\n    }\n    return this.runTask(this.fetchHamster(this.running.length), index, task, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - Gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    if(task.input.sharedArray) {\n      task.output = hamsters.data.processDataType(task.input.dataType, task.scheduler.sharedBuffer);\n    }\n    if(task.input.aggregate) {\n      task.output = this.hamsters.data.aggregateThreadOutputs(task.output, task.input.dataType);\n    }\n    if(task.input.sort) {\n      task.output = this.hamsters.data.sortOutput(task.output, task.input.sort)\n    }\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.completed_at = Date.now();\n      console.info(\"Hamsters.js Task Completed: \", task);\n    }\n    resolve(task.output);\n  }\n\n  /**\n  * @function removeFromRunning - Removes a thread from the running pool\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to remove\n  */\n  removeFromRunning(task, threadId) {\n    this.running.splice(this.running.indexOf(threadId), 1);\n    task.scheduler.workers.splice(task.scheduler.workers.indexOf(threadId), 1);\n  }\n\n  /**\n   * @function processReturn - Processes the returned message from a thread\n   * @param {number} index - Index of the subarray processed\n   * @param {object} message - Message returned from the thread\n   * @param {number} threadId - Id of thread returning response\n   * @param {object} task - Provided library functionality options for this task\n   */\n  processReturn(index, message, threadId, task) {\n    const isReactNative = this.hamsters.habitat.reactNative;\n    const messageData = isReactNative ? JSON.parse(message).data : message.data.data !== undefined ? message.data.data : message.data;\n    \n    if (task.scheduler.threads !== 1) {\n        if (isReactNative || task.input.mixedOutput) {\n          task.output[threadId] = messageData;\n        } else {\n          this.hamsters.data.addThreadOutputWithIndex(task, index, messageData);\n        }\n    } else {\n        task.output = messageData;\n    }\n  }\n\n\n  /**\n  * @function setOnMessage - Sets the message handlers for a thread\n  * @param {object} hamster - The thread to set the handlers on\n  * @param {function} onThreadResponse - Handler for thread response\n  * @param {object} habitat - Habitat configuration\n  * @param {function} reject - onError method\n  */\n  setOnMessage(hamster, onThreadResponse, reject) {\n    if (this.hamsters.habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = reject;\n      hamster.port.onerror = reject;\n    } else if (this.hamsters.habitat.node) {\n      hamster.once('message', onThreadResponse);\n      hamster.once('onmessageerror', reject);\n      hamster.once('error', reject);\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = reject;\n      hamster.onerror = reject;\n    }\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to train\n  * @param {object} hamster - The thread to train\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(index, task, threadId, hamster, resolve, reject) {\n    const onThreadResponse = (message) => {\n      this.hamsters.pool.processReturn(index, message, threadId, task);\n      if (this.hamsters.habitat.debug) {\n        task.scheduler.metrics.threads[threadId].completed_at = Date.now();\n      }\n      this.hamsters.pool.removeFromRunning(task, threadId);\n      if (task.scheduler.workers.length === 0 && task.scheduler.count === task.scheduler.threads) {\n        this.hamsters.pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (this.hamsters.pool.pending.length !== 0) {\n        return pool.processQueuedItem(hamster, pool.pending.shift());\n      }\n      if (!this.hamsters.habitat.persistence) {\n        return hamster.terminate();\n      }\n    };\n    this.hamsters.pool.setOnMessage(hamster, onThreadResponse, reject);\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  */\n  scheduleTask(task) {\n    let i = 0;\n    if(this.hamsters.habitat.debug) {\n      let metrics = task.scheduler.metrics;\n      metrics.started_at = Date.now();\n      return new Promise((resolve, reject) => {\n        while (i < task.scheduler.threads) {\n          metrics.threads.push({\n            created_at: Date.now(),\n            started_at: null,\n            enqueued_at: null,\n            dequeued_at: null,\n            completed_at: null\n          });\n          this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n          i += 1;\n        }\n      });\n    }\n    //Process with debug mode disabled, no need for time stamping\n  \treturn new Promise((resolve, reject) => {\n      while (i < task.scheduler.threads) {\n        this.hamsterWheel(task.scheduler.indexes[i], task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n}\n\nexport default Pool;\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","class Data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters; // Set the hamsters object as a property of Data class\n    this.getSubArrayFromIndex = this.getSubArrayUsingIndex.bind(this); // Bind getSubArrayUsingIndex function\n    this.getSubArrayIndexes = this.calculateIndexes.bind(this); // Bind calculateIndexes function\n    this.sortOutput = this.sortTaskOutput.bind(this); // Bind sortTaskOutput function\n    this.aggregateThreadOutputs = this.aggregateThreadOutputs.bind(this);\n    this.processDataType = this.typedArrayFromBuffer;\n    this.prepareFunction = this.prepareWorkerTask.bind(this); // Bind prepareWorkerTask function\n    this.feedHamster = this.messageWorkerThread.bind(this); // Bind messageWorkerThread function\n    this.getBufferSize = this.getBufferSize;\n    this.createSharedBuffer = this.createSharedBuffer.bind(this);\n    this.getDataType = this.getDataType;\n    this.setupSharedArrayBuffer = this.setupSharedArrayBuffer.bind(this);\n  }\n\n  /**\n  * @function messageWorkerThread - Prepares message to send to thread\n  * @param {object} hamstersHabitat - Hamsters Habitat instance\n  * @param {Worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorkerThread(hamster, task, hamsterFood) {\n    if(this.hamsters.habitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (this.hamsters.habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if(typeof hamsterFood.array.buffer !== 'undefined') {\n      return hamster.postMessage(hamsterFood, [hamsterFood.array.buffer]);\n    } else {\n      return hamster.postMessage(hamsterFood);\n    }\n  }\n\n  /**\n  * @function typedArrayFromBuffer - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'Uint32': Uint32Array,\n      'Uint16': Uint16Array,\n      'Uint8': Uint8Array,\n      'Uint8clamped': Uint8ClampedArray,\n      'Int32': Int32Array,\n      'Int16': Int16Array,\n      'Int8': Int8Array,\n      'Float32': Float32Array,\n      'Float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return buffer;\n    }\n    return new types[dataType](buffer);\n  }\n\n  /**\n  * @function prepareWorkerTask - Prepares function for thread, strips whitespace\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareWorkerTask(functionBody) {\n    let functionString = String(functionBody);\n    return functionString.substring((functionString.indexOf(\"{\") + 1), (functionString.length -1));\n  }\n\n  /**\n  * @function sortTaskOutput - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortTaskOutput(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n   * @function getBufferSize - Gets the byte length of the input array\n   * @param {TypedArray} array - The input typed array\n   * @returns {number} - The byte length of the array\n   */\n  getBufferSize(array) {\n    return array.byteLength;\n  }\n\n  /**\n   * @function createSharedBuffer - Creates a SharedArrayBuffer based on the input array's byte length\n   * @param {TypedArray} array - The input typed array\n   * @returns {SharedArrayBuffer} - The created SharedArrayBuffer\n   */\n  createSharedBuffer(array) {\n    const byteLength = this.getBufferSize(array);\n    const sharedBuffer = new SharedArrayBuffer(byteLength);\n    const sharedArray = new array.constructor(sharedBuffer);\n\n    // Copy data from the input array to the shared array\n    sharedArray.set(array);\n\n    return sharedBuffer;\n  }\n\n  /**\n   * @function setupSharedArrayBuffer - Sets up the shared buffer and corresponding typed array\n   * @param {TypedArray} array - The input typed array\n   * @returns {object} - SharedArrayBuffer;\n   */\n  setupSharedArrayBuffer(array) {\n    return this.createSharedBuffer(array);\n  }\n\n  /**\n  * @function aggregateThreadOutputs - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  aggregateThreadOutputs(input, dataType) {\n    if(!dataType) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  /**\n  * @function addThreadOutputWithIndex - Joins individual thread outputs into single result\n  * @param {object} task - Hamsters task object\n  * @param {object} index - Index information\n  * @param {array} output - Output array\n  */\n  addThreadOutputWithIndex(task, index, output) {\n    let i = 0;\n    let outputLength = output.length;\n    for (i; i < outputLength; i++) {\n      task.output[(index.start + i)] = output[i];\n    }\n  }\n\n  /**\n   * @function calculateIndexes - Splits a single array into multiple equal sized subarrays\n   * @param {array} array - Array to split\n   * @param {number} n - Number of subarrays to create\n   */\n  calculateIndexes(array, n) {\n    // If n is 1, return the whole array range\n    if (n === 1) {\n      return [{ start: 0, end: array.length - 1 }];\n    }\n\n    const indexes = [];\n    const segmentSize = Math.floor(array.length / n);\n    let startIndex = 0;\n\n    for (let i = 0; i < n; i++) {\n      const endIndex = startIndex + segmentSize - 1;\n      indexes.push({ start: startIndex, end: endIndex });\n      startIndex = endIndex + 1;\n    }\n\n    // Adjust the last segment to cover any remaining elements\n    if (startIndex < array.length) {\n      indexes[n - 1].end = array.length - 1;\n    }\n\n    return indexes;\n  }\n  \n\n  /**\n  * @function getSubArrayUsingIndex - Slices subarray based on provided index\n  * @param {object} index - Index information\n  * @param {object} task - Hamsters task object\n  */\n  getSubArrayUsingIndex(index, task) {\n    return task.input.array.slice(index.start, index.end + 1);\n  }\n}\n\nexport default Data;\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","class Wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold.bind(this);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      var port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        this.params = incomingMessage.data;\n        this.rtn = {\n          data: [],\n          dataType: this.params.dataType\n        };\n        eval(\"(\" + this.params.hamstersJob + \")\")();\n        port.postMessage(this.rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function regularScaffold - Provides worker body for library functionality\n  */\n  regularScaffold() {\n    self.params = {};\n    self.rtn = {};\n  \n    self.onmessage = function(message) {\n      this.params = message.data;\n      this.rtn = {\n        data: [],\n        dataType: (typeof this.params.dataType !== 'undefined' ? this.params.dataType : null),\n        index: this.params.index\n      };\n      if(this.params.sharedBuffer) {\n        this.params.sharedArray = typedArrayFromBuffer(this.params.dataType, this.params.sharedBuffer)\n      }\n      eval(this.params.hamstersJob);\n      const buffers = handleDataType(this.rtn); // Call the function to handle data type\n      returnResponse(this.rtn, buffers);\n    }.bind(this);\n\n    handleDataType = function(rtn) {\n      if (this.params.sharedArray) {\n        //Do nothing here, we don't need to return a buffer rtn.data is useless here\n      } else if (rtn.dataType) {\n        // Convert rtn.data to typed array if dataType is specified\n        rtn.data = typedArrayFromBuffer(rtn.dataType, rtn.data);\n      }\n    }.bind(this);\n  \n    function typedArrayFromBuffer(dataType, buffer) {\n      var types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n  \n    function returnResponse(rtn, buffers) {\n      if (buffers && buffers.length > 0) {\n        // If there are buffers, postMessage with transferable objects\n        postMessage(rtn, buffers);\n      } else {\n        // Otherwise, postMessage without transferable objects\n        postMessage(rtn);\n      }\n    }\n  }\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(params, resolve, reject) {\n    var rtn = {\n      data: [],\n      dataType: (typeof params.dataType !== \"undefined\" ? params.dataType : null)\n    };\n    if(this.hamsters.habitat.reactNative) {\n      self.rtn = rtn;\n    }\n    if(this.hamsters.habitat.node || this.hamsters.habitat.isIE) {\n      eval(params.hamstersJob);\n    } else {\n      params.hamstersJob();\n    }\n    resolve(rtn.data);\n  }\n}\n\nexport default Wheel;\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","import NodeStore from './stores/NodeStore';\nimport WebStore from './stores/WebStore';\n\nclass Memoize {\n    constructor(hamsters, maxSize) {\n        this.hamsters = hamsters;\n        this.store = this.hamsters.habitat.node ? new NodeStore(maxSize) : new WebStore('HamstersJSMemoizeDB', 'cacheStore', maxSize);\n    }\n\n    memoize(func) {\n        const self = this;\n        return function(task) {\n            const key = self.generateTaskKey(task);\n\n            return new Promise(function(resolve, reject) {\n                self.store.get(key).then(function(cachedResult) {\n                    if (cachedResult !== null) {\n                        resolve(cachedResult);\n                    } else {\n                        self.applyFunc(func, task).then(function(result) {\n                            self.store.set(key, result).then(function() {\n                                resolve(result);\n                            }).catch(reject);\n                        }).catch(reject);\n                    }\n                }).catch(reject);\n            });\n        };\n    }\n\n    generateTaskKey(task) {\n        const key = JSON.stringify({ input: task.input });\n        return this.hashCode(key);\n    }\n\n    hashCode(str) {\n        let hash = 0, i, chr;\n        if (str.length === 0) return hash;\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash.toString();\n    }\n\n    applyFunc(func, args) {\n        return new Promise((resolve, reject) => {\n            try {\n                const result = func.apply(null, args);\n                resolve(result);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n}\n\nexport default Memoize;\n\n\n// WEBPACK FOOTER //\n// ./feature/memoize.js","class NodeStore {\n    constructor(maxSize) {\n        this.maxSize = maxSize;\n        this.cache = new Map();\n    }\n\n    get(key) {\n        if (this.cache.has(key)) {\n            const value = this.cache.get(key);\n            // Refresh the key\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            return Promise.resolve(value);\n        }\n        return Promise.resolve(null);\n    }\n\n    set(key, value) {\n        if (this.cache.size >= this.maxSize) {\n            // Remove the oldest (least recently used) entry\n            const oldestKey = this.cache.keys().next().value;\n            this.cache.delete(oldestKey);\n        }\n        this.cache.set(key, value);\n        return Promise.resolve();\n    }\n\n    clear() {\n        this.cache.clear();\n        return Promise.resolve();\n    }\n}\n\nexport default NodeStore;\n\n\n\n// WEBPACK FOOTER //\n// ./feature/stores/NodeStore.js","class WebStore {\n    constructor(dbName, storeName, maxSize) {\n        this.dbName = dbName;\n        this.storeName = storeName;\n        this.maxSize = maxSize;\n        this.db = null;\n        this.initDB();\n    }\n\n    initDB() {\n        const self = this;\n        const request = indexedDB.open(this.dbName, 1);\n\n        request.onerror = function(event) {\n            console.error('Error opening database:', event.target.error);\n        };\n\n        request.onupgradeneeded = function(event) {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains(self.storeName)) {\n                const objectStore = db.createObjectStore(self.storeName, { keyPath: 'key' });\n                objectStore.createIndex('by_key', 'key', { unique: true });\n                objectStore.createIndex('by_timestamp', 'timestamp');\n            }\n        };\n\n        request.onsuccess = function(event) {\n            self.db = event.target.result;\n        };\n    }\n\n    get(key) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve(null);\n                return;\n            }\n\n            const transaction = self.db.transaction([self.storeName], 'readonly');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.get(key);\n\n            request.onsuccess = function(event) {\n                const result = event.target.result;\n                if (result) {\n                    self.updateTimestamp(key).then(() => resolve(result.value)).catch(reject);\n                } else {\n                    resolve(null);\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    set(key, value) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve();\n                return;\n            }\n\n            self.checkSize().then(() => {\n                const transaction = self.db.transaction([self.storeName], 'readwrite');\n                const objectStore = transaction.objectStore(self.storeName);\n                const request = objectStore.put({ key: key, value: value, timestamp: Date.now() });\n\n                request.onsuccess = function() {\n                    resolve();\n                };\n\n                request.onerror = function(event) {\n                    reject(event.target.error);\n                };\n            }).catch(reject);\n        });\n    }\n\n    clear() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve();\n                return;\n            }\n\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.clear();\n\n            request.onsuccess = function() {\n                resolve();\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    checkSize() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readonly');\n            const objectStore = transaction.objectStore(self.storeName);\n            const countRequest = objectStore.count();\n\n            countRequest.onsuccess = function() {\n                const count = countRequest.result;\n                if (count >= self.maxSize) {\n                    self.evictOldest().then(resolve).catch(reject);\n                } else {\n                    resolve();\n                }\n            };\n\n            countRequest.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    evictOldest() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const index = objectStore.index('by_timestamp');\n            const request = index.openCursor(null, 'next');\n\n            request.onsuccess = function(event) {\n                const cursor = event.target.result;\n                if (cursor) {\n                    cursor.delete().onsuccess = function() {\n                        resolve();\n                    };\n                } else {\n                    resolve();\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    updateTimestamp(key) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.get(key);\n\n            request.onsuccess = function(event) {\n                const data = event.target.result;\n                if (data) {\n                    data.timestamp = Date.now();\n                    objectStore.put(data).onsuccess = function() {\n                        resolve();\n                    };\n                } else {\n                    resolve();\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n}\n\nexport default WebStore;\n\n\n\n// WEBPACK FOOTER //\n// ./feature/stores/WebStore.js"],"sourceRoot":""}