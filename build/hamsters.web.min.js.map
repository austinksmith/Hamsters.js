{"version":3,"sources":["webpack:///webpack/bootstrap 7adbe8d28dfe532a7d8b","webpack:///./hamsters.js","webpack:///./core/habitat.js","webpack:///../~/node-libs-browser/~/process/browser.js","webpack:///./core/pool.js","webpack:///./core/data.js","webpack:///./core/wheel.js","webpack:///./core/task.js","webpack:///./feature/memoize.js","webpack:///./feature/stores/NodeStore.js","webpack:///./feature/stores/WebStore.js","webpack:///./feature/distribute.js"],"names":["hamstersjs","version","run","hamstersRun","bind","promise","hamstersPromise","init","inititializeLibrary","data","pool","wheel","habitat","memoize","startOptions","Data","Pool","Wheel","Habitat","Memoize","distribute","Distribute","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","console","info","Object","keys","key","includes","toLowerCase","forceLegacyMode","Worker","isIE","task","resolve","reject","input","memoizedFunction","scheduleTask","then","catch","params","functionToRun","Promise","Task","onSuccess","onError","hamsters","module","exports","debug","importScripts","browser","isBrowser","webWorker","isWebWorker","node","isNode","reactNative","isReactNative","shell","isShell","transferable","supportsTransferableObjects","atomics","supportsAtomicOperations","proxies","supportsProxies","isInternetExplorer","selectHamsterWheel","sharedWorker","locateSharedWorkerObject","locateBlobBuilder","findAvailableBlobBuilder","isLegacyEnvironment","locateWorkerObject","determineGlobalThreads","getHabitatKeys","max","navigator","hardwareConcurrency","isFirefox","os","cpus","length","userAgent","indexOf","SharedWorker","window","process","product","isLegacy","supportsSharedWorkers","supports","workerBlob","generateWorkerBlob","SharedHamster","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","blob","append","type","getBlob","workerLogic","URL","createObjectURL","createDataBlob","String","Uint8Array","SharedArrayBuffer","Proxy","regular","threads","running","pending","fetchHamster","getAvailableThread","index","subTaskId","scheduler","metrics","count","enqueued_at","Date","now","push","hamster","item","dequeued_at","runTask","threadId","spawnHamster","id","started_at","workers","parentPort","hamsterWheel","hamsterFood","array","getSubArrayFromIndex","sharedBuffer","excludedKeys","Set","hasOwnProperty","has","prepareMeal","keepTrackOfThread","trainHamster","feedHamster","addWorkToPending","distributeTask","sharedArray","output","processDataType","dataType","aggregate","aggregateThreadOutputs","sort","sortOutput","completed_at","splice","message","response","messageData","JSON","parse","undefined","mixedOutput","addThreadOutputWithIndex","onThreadResponse","port","onmessage","onmessageerror","onerror","once","processReturn","removeFromRunning","returnOutputAndRemoveTask","processQueuedItem","shift","terminate","setOnMessage","i","created_at","indexes","getSubArrayUsingIndex","getSubArrayIndexes","calculateIndexes","sortTaskOutput","typedArrayFromBuffer","prepareFunction","prepareWorkerTask","messageWorkerThread","getBufferSize","createSharedBuffer","getDataType","setupSharedArrayBuffer","postMessage","stringify","getTransferableObjects","obj","typedArrayBuffers","transferableObjects","typedArrayTypes","otherTransferables","globalContext","global","prop","buffer","concat","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","functionBody","functionString","substring","arr","order","Array","prototype","call","a","b","reverse","byteLength","constructor","set","reduce","len","bufferLength","offset","outputLength","start","n","end","segmentSize","Math","floor","startIndex","endIndex","slice","worker","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","ports","incomingMessage","eval","hamstersJob","buffers","handleDataType","returnResponse","setupLegacyTask","setupModernTask","setupDebugMetrics","maxSize","store","NodeStore","WebStore","func","generateTaskKey","get","cachedResult","applyFunc","result","hashCode","str","hash","chr","charCodeAt","toString","args","apply","error","cache","Map","value","delete","size","oldestKey","next","clear","dbName","storeName","db","initDB","request","indexedDB","open","event","target","onupgradeneeded","objectStoreNames","contains","objectStore","createObjectStore","keyPath","createIndex","unique","onsuccess","transaction","updateTimestamp","checkSize","put","timestamp","countRequest","evictOldest","openCursor","cursor","localConnection","remoteConnections","sendChannels","receiveChannels","pcConstraint","dataConstraint","ws","connectionTargets","clientId","dataChannelSend","document","getElementById","clientSelect","initWebSocket","createConnection","WebSocket","location","host","onopen","log","loadClientList","updateClientList","clients","handleOffer","handleAnswer","handleCandidate","onclose","map","client","displayClientList","innerHTML","forEach","option","createElement","text","appendChild","fetch","json","alert","placeholder","servers","RTCPeerConnection","sendChannel","createDataChannel","onicecandidate","candidate","send","targetClient","onSendChannelStateChange","sendData","createOffer","setLocalDescription","desc","offer","onCreateSessionDescriptionError","from","remoteConnection","ondatachannel","receiveChannelCallback","setRemoteDescription","RTCSessionDescription","createAnswer","answer","connection","addIceCandidate","RTCIceCandidate","onAddIceCandidateError","payload","readyState","trace","close","receiveChannel","channel","onReceiveMessageCallback","onReceiveChannelStateChange","arg","performance","toFixed"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;;;;;;;ACvLtC;;AAEA;;;;;;;;;KASMF,I;AACJ;;;;AAIA,iBAAYmC,QAAZ,EAAsB;AACpB;;AADoB;;AAGpB,UAAKA,QAAL,GAAgBA,QAAhB;AACA,UAAKuE,OAAL,GAAe,EAAf;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,YAAL,GAAoB,KAAKC,kBAAL,CAAwB1H,IAAxB,CAA6B,IAA7B,CAApB;AACD;;AAED;;;;;;;;;;;sCAOiB2H,K,EAAOC,S,EAAW3F,I,EAAMC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","file":"hamsters.web.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7adbe8d28dfe532a7d8b","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nimport Habitat from './core/habitat';\nimport Pool from './core/pool';\nimport Data from './core/data';\nimport Wheel from './core/wheel';\nimport Task from './core/task';\n\n//Features\nimport Memoize from './feature/memoize';\nimport Distribute from './feature/distribute';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    'use strict';\n\n    this.version = '5.5.8';\n    this.run = this.hamstersRun.bind(this);\n    this.promise = this.hamstersPromise.bind(this);\n    this.init = this.inititializeLibrary.bind(this);\n    this.data = {};\n    this.pool = {};\n    this.wheel = {};\n    this.habitat = {};\n    this.memoize = {};\n  }\n\n  /**\n  * @function inititializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  inititializeLibrary(startOptions) {\n    this.data = new Data(this);\n    this.pool = new Pool(this);\n    this.wheel = new Wheel(this);\n    this.habitat = new Habitat(this);\n    this.memoize = new Memoize(this, 100); //Set a maximum of 100 memoized function results, LRU cache\n    this.distribute = new Distribute(this);\n\n    this.processStartOptions(startOptions);\n    \n    if (!this.habitat.legacy && this.habitat.persistence === true) {\n      this.pool.spawnHamsters(this.habitat.maxThreads);\n    }\n    this.maxThreads = this.habitat.maxThreads;\n    console.info(`Hamsters.js ${this.version} initialized using up to ${this.habitat.maxThreads} threads`);\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      for (const key of Object.keys(startOptions)) {\n        if (this.habitat.keys.includes(key.toLowerCase())) {\n          this.habitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    let forceLegacyMode = (typeof startOptions !== 'undefined' && typeof startOptions.legacy !== 'undefined');\n    if (forceLegacyMode) {\n      forceLegacyMode = startOptions.legacy;\n    }\n    if (typeof this.habitat.Worker === 'function' && !forceLegacyMode) {\n      this.habitat.legacy = this.habitat.isIE;\n    }\n  }\n\n  /**\n   * @async\n   * @function scheduleTask - Schedules a new function to be processed by the library\n   * @param {object} task - Provided library execution options\n   * @param {function} resolve - Parent function promise resolve method\n   * @param {function} reject - Parent function promise reject method\n   * @return {Promise} Promise object on completion\n   */\n  scheduleTask(task, resolve, reject) {\n    if (task.input.memoize) {\n      // Pass the task object to the memoized function\n      const memoizedFunction = this.memoize.memoize(() => this.pool.scheduleTask(task));\n      return memoizedFunction(task).then(resolve).catch(reject);\n    }\n    return this.pool.scheduleTask(task)\n        .then(resolve)\n        .catch(reject);\n  }\n\n  /**\n   * @async\n   * @function hamstersPromise - Calls library functionality using async promises\n   * @param {object} params - Provided library execution options\n   * @param {function} functionToRun - Function to execute\n   * @return {Promise} Promise resolving with results from functionToRun\n   */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      this.scheduleTask(new Task(this, params, functionToRun), resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    this.scheduleTask(new Task(this, params, functionToRun), onSuccess, onError);\n  }\n}\n\nconst hamsters = new hamstersjs();\n\nmodule.exports = hamsters;\n\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferable = this.supportsTransferableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE = this.isInternetExplorer();\n    this.selectHamsterWheel = this.selectHamsterWheel.bind(this);\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.locateBlobBuilder = this.findAvailableBlobBuilder();\n    this.legacy = this.isLegacyEnvironment();\n    this.Worker = this.locateWorkerObject();\n    this.maxThreads = this.determineGlobalThreads();\n    this.keys = this.getHabitatKeys();\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(this.browser && typeof navigator.hardwareConcurrency !== \"undefined\") {\n      max = navigator.hardwareConcurrency;\n      if(this.isFirefox()) {\n        max = (max > 20 ? 20 : max);\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function isFirefox - Detect firefox browser\n  */\n  isFirefox() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return (typeof Worker !== 'undefined' ? Worker : false);\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return (typeof SharedWorker !== 'undefined' ? SharedWorker : false);\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return (typeof window === \"object\");\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer() {\n    if(typeof navigator !== \"undefined\" && typeof navigator.userAgent !== \"undefined\") {\n      return (navigator.userAgent.indexOf(\"MSIE \") !== -1 || navigator.userAgent.indexOf(\"Trident/\") !== -1);\n    }\n    return false;\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return (typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser);\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a web worker\n  */\n  isWebWorker() {\n    return (typeof importScripts === \"function\" && !this.isReactNative());\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is React Native\n  */\n  isReactNative() {\n    return (typeof navigator !== \"undefined\" && typeof navigator.product !== \"undefined\" && navigator.product === \"ReactNative\");\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return ((typeof navigator === \"undefined\") && !this.isNode() && !this.isWebWorker() && !this.isReactNative());\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = !!!this.Worker;\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy;\n  }\n\n  /**\n  * @function supportsSharedWorkers - Detects if execution environment supports SharedWorkers\n  */\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = this.generateWorkerBlob(this.selectHamsterWheel());\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function findAvailableBlobBuilder - Attempts to locate a data blob builder, with vendor prefixes\n  */\n  findAvailableBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return 'Environment does not support data blobs!';\n  }\n\n  /**\n  * @function createDataBlob - Creates a new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates a blob URI for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    return  URL.createObjectURL(this.createDataBlob('(' + String(workerLogic) + ')();'));\n  }\n\n  /**\n  * @function supportsTransferableObjects - Detects if execution environment supports typed arrays\n  */\n  supportsTransferableObjects() {\n    return (typeof Uint8Array !== 'undefined');\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports SharedArrayBuffers\n  */\n  supportsAtomicOperations() {\n    return (typeof SharedArrayBuffer !== 'undefined');\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports Proxy objects\n  */\n  supportsProxies() {\n    return (typeof Proxy !== 'undefined');\n  }\n\n  /**\n  * @function selectHamsterWheel - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE) {\n      return this.hamsters.wheel.legacy;\n    }\n    if(this.reactNative) {\n      return 'reactNativeHamster.js';\n    }\n    if (this.node) {\n      return './node_modules/hamsters.js/build/common/node.js';\n    }\n    return this.generateWorkerBlob(this.hamsters.wheel.regular);\n  }\n\n  /**\n  * @function getHabitatKeys - Returns keys for this Habitat instance\n  */\n  getHabitatKeys() {\n    return [\n      'worker','sharedworker',\n      'legacy','proxies',\n      'reactnative','atomics',\n      'transferable','browser',\n      'shell','node','debug',\n      'persistence','importscripts',\n      'maxthreads', 'parentport',\n      'webworker',\n    ];\n  }\n}\n\nmodule.exports = Habitat;\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/node-libs-browser/~/process/browser.js\n// module id = 3\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\nclass Pool {\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.getAvailableThread.bind(this);\n  }\n\n  /**\n  * @function addWorkToPending - Adds task to queue waiting for available thread\n  * @param {number} index - Index of the task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(index, subTaskId, task, resolve, reject) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[task.scheduler.count].enqueued_at = Date.now();\n    }\n    this.pending.push({\n      index,\n      subTaskId,  \n      task,\n      resolve,\n      reject\n    });\n  }\n\n  /**\n  * @function processQueuedItem - Invokes processing of next item in queue\n  * @param {object} hamster - The thread to run the task\n  * @param {object} item - Task to process\n  */\n  processQueuedItem(hamster, item) {\n    if (this.hamsters.habitat.debug) {\n      item.task.scheduler.metrics.threads[item.subTaskId].dequeued_at = Date.now();\n    }\n    return this.runTask(hamster, item.index, item.subTaskId, item.task, item.resolve, item.reject);\n  }\n\n  /**\n  * @function getAvailableThread - Gets an available thread\n  * @param {number} threadId - Id of the thread\n  * @returns {object} - The available thread\n  */\n  getAvailableThread(threadId) {\n    if (this.hamsters.habitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.threads[id].started_at = Date.now();\n    }\n    task.scheduler.workers.push(id);\n    this.running.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {number} maxThreads - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    while (maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    const { selectHamsterWheel, SharedWorker, Worker, node, parentPort } = this.hamsters.habitat;\n    const hamsterWheel = selectHamsterWheel();\n    if (this.hamsters.habitat.webWorker) {\n      return new SharedWorker(hamsterWheel, 'SharedHamsterWheel');\n    }\n    if (node && typeof parentPort !== 'undefined') {\n      return new Worker(hamsterWheel);\n    }\n    return new Worker(hamsterWheel);\n  }\n    \n  /**\n   * @function prepareMeal\n   * @description Prepares message to send to a thread and invoke execution\n   * @param {number} index - Index of the subarray to process\n   * @param {number} subTaskId - Subtask ID\n   * @param {object} task - Provided library functionality options for this task\n   * @returns {object} - Prepared message to send to a thread\n   */\n  prepareMeal(index, subTaskId, task) {\n    index.id = subTaskId;\n\n    // Prepare the base hamsterFood object\n    const hamsterFood = {\n      array: task.input.array && task.input.array.length !== 0 ? \n            this.hamsters.data.getSubArrayFromIndex(index, task) : [],\n      index: index\n    };\n\n    // Add sharedBuffer if it exists\n    if (typeof task.scheduler.sharedBuffer !== 'undefined') {\n      hamsterFood.sharedBuffer = task.scheduler.sharedBuffer;\n    }\n\n    // List of excluded keys\n    const excludedKeys = new Set(['array', 'threads', 'sharedArray']);\n\n    // Iterate over task.input properties and add to hamsterFood\n    for (const key in task.input) {\n      if (task.input.hasOwnProperty(key) && !excludedKeys.has(key)) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n\n    return hamsterFood;\n  }\n\n\n\n  /**\n  * @function runTask - Runs function using thread\n  * @param {object} hamster - The thread to run the task\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, index, subTaskId, task, resolve, reject) {\n    const threadId = this.running.length;\n    const hamsterFood = this.prepareMeal(index, subTaskId, task);\n    this.hamsters.pool.keepTrackOfThread(task, threadId);\n    if (this.hamsters.habitat.legacy) {\n      this.hamsters.wheel.legacy(hamsterFood, resolve, reject);\n    } else {\n      this.hamsters.pool.trainHamster(index, task, threadId, hamster, resolve, reject);\n      this.hamsters.data.feedHamster(hamster, hamsterFood);\n    }\n    task.scheduler.count += 1;\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(index, subTaskId, task, resolve, reject) {\n    if (this.hamsters.habitat.maxThreads <= this.running.length) {\n      this.addWorkToPending(index, subTaskId, task, resolve, reject);\n    } else {\n      if(task.input.distribute) {\n        this.hamsters.distribute.distributeTask(index, subTaskId, task, resolve, reject);\n      } else {\n        const hamster = this.fetchHamster(this.running.length);\n        this.runTask(hamster, index, subTaskId, task, resolve, reject);\n      }\n    }\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - Gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    if(task.input.sharedArray) {\n      task.output = hamsters.data.processDataType(task.input.dataType, task.scheduler.sharedBuffer);\n    }\n    if(task.input.aggregate) {\n      task.output = this.hamsters.data.aggregateThreadOutputs(task.output, task.input.dataType);\n    }\n    if(task.input.sort) {\n      task.output = this.hamsters.data.sortOutput(task.output, task.input.sort)\n    }\n    if (this.hamsters.habitat.debug) {\n      task.scheduler.metrics.completed_at = Date.now();\n      console.info(\"Hamsters.js Task Completed: \", task);\n    }\n    resolve(task.output);\n  }\n\n  /**\n  * @function removeFromRunning - Removes a thread from the running pool\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to remove\n  */\n  removeFromRunning(task, threadId) {\n    this.running.splice(this.running.indexOf(threadId), 1);\n    task.scheduler.workers.splice(task.scheduler.workers.indexOf(threadId), 1);\n  }\n\n  /**\n   * @function processReturn - Processes the returned message from a thread\n   * @param {number} index - Index of the subarray processed\n   * @param {object} message - Message returned from the thread\n   * @param {object} task - Provided library functionality options for this task\n   */\n  processReturn(index, message, task) {\n    const isReactNative = this.hamsters.habitat.reactNative;\n    const isNode = this.hamsters.habitat.node;\n    const response = message.data;\n    const messageData = isReactNative ? JSON.parse(message).data : (response.data !== undefined ? response.data : response);\n    const threadId = isNode ? message.index.id : response.index.id;\n\n    if (task.scheduler.threads !== 1) {\n      if (isReactNative || task.input.mixedOutput) {\n          task.output[threadId] = messageData;\n      } else {\n        this.hamsters.data.addThreadOutputWithIndex(task, index, messageData);\n      }\n    } else {\n      task.output = messageData;\n    }\n  }\n\n\n\n  /**\n  * @function setOnMessage - Sets the message handlers for a thread\n  * @param {object} hamster - The thread to set the handlers on\n  * @param {function} onThreadResponse - Handler for thread response\n  * @param {object} habitat - Habitat configuration\n  * @param {function} reject - onError method\n  */\n  setOnMessage(hamster, onThreadResponse, reject) {\n    if (this.hamsters.habitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = reject;\n      hamster.port.onerror = reject;\n    } else if (this.hamsters.habitat.node) {\n      hamster.once('message', onThreadResponse);\n      hamster.once('onmessageerror', reject);\n      hamster.once('error', reject);\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = reject;\n      hamster.onerror = reject;\n    }\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} index - Index of the subarray to process\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} threadId - Id of the thread to train\n  * @param {object} hamster - The thread to train\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(index, task, threadId, hamster, resolve, reject) {\n    const onThreadResponse = (message) => {\n      this.hamsters.pool.processReturn(index, message, task);\n      if (this.hamsters.habitat.debug) {\n        task.scheduler.metrics.threads[threadId].completed_at = Date.now();\n      }\n      this.hamsters.pool.removeFromRunning(task, threadId);\n      if (task.scheduler.workers.length === 0 && task.scheduler.count === task.scheduler.threads) {\n        this.hamsters.pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (this.hamsters.pool.pending.length !== 0) {\n        this.hamsters.pool.processQueuedItem(hamster, this.hamsters.pool.pending.shift());\n      } else if (!this.hamsters.habitat.persistence) {\n        hamster.terminate();\n      }\n    };\n    this.hamsters.pool.setOnMessage(hamster, onThreadResponse, reject);\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  */\n  scheduleTask(task) {\n    let i = 0;\n    if(this.hamsters.habitat.debug) {\n      let metrics = task.scheduler.metrics;\n      metrics.started_at = Date.now();\n      return new Promise((resolve, reject) => {\n        while (i < task.scheduler.threads) {\n          metrics.threads.push({\n            created_at: Date.now(),\n            started_at: null,\n            enqueued_at: null,\n            dequeued_at: null,\n            completed_at: null\n          });\n          this.hamsterWheel(task.scheduler.indexes[i], i, task, resolve, reject);\n          i += 1;\n        }\n      });\n    }\n    //Process with debug mode disabled, no need for time stamping\n  \treturn new Promise((resolve, reject) => {\n      while (i < task.scheduler.threads) {\n        this.hamsterWheel(task.scheduler.indexes[i], i, task, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n}\n\nmodule.exports = Pool;\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","class Data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters; // Set the hamsters object as a property of Data class\n    this.getSubArrayFromIndex = this.getSubArrayUsingIndex.bind(this); // Bind getSubArrayUsingIndex function\n    this.getSubArrayIndexes = this.calculateIndexes.bind(this); // Bind calculateIndexes function\n    this.sortOutput = this.sortTaskOutput.bind(this); // Bind sortTaskOutput function\n    this.aggregateThreadOutputs = this.aggregateThreadOutputs.bind(this);\n    this.processDataType = this.typedArrayFromBuffer;\n    this.prepareFunction = this.prepareWorkerTask.bind(this); // Bind prepareWorkerTask function\n    this.feedHamster = this.messageWorkerThread.bind(this); // Bind messageWorkerThread function\n    this.getBufferSize = this.getBufferSize;\n    this.createSharedBuffer = this.createSharedBuffer.bind(this);\n    this.getDataType = this.getDataType;\n    this.setupSharedArrayBuffer = this.setupSharedArrayBuffer.bind(this);\n  }\n\n  /**\n  * @function messageWorkerThread - Prepares message to send to thread\n  * @param {object} hamstersHabitat - Hamsters Habitat instance\n  * @param {Worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorkerThread(hamster, hamsterFood) {\n    if(this.hamsters.habitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (this.hamsters.habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    return hamster.postMessage(hamsterFood, this.hamsters.data.getTransferableObjects(hamsterFood));\n  }\n\n  getTransferableObjects(obj) {\n    const typedArrayBuffers = [];\n    const transferableObjects = [];\n    const typedArrayTypes = [\n      'Int32Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array', \n      'Uint16Array', 'Uint32Array', 'Float32Array', 'Float64Array'\n    ];\n    const otherTransferables = [\n      'ArrayBuffer', 'MessagePort', 'ImageBitmap', 'OffscreenCanvas'\n    ];\n    const globalContext = typeof window !== 'undefined' ? window : global;\n  \n    for (const prop in obj) {\n      for (const type of typedArrayTypes) {\n        if (typeof globalContext[type] !== 'undefined' && obj[prop] instanceof globalContext[type]) {\n          typedArrayBuffers.push(obj[prop].buffer);\n          break;\n        }\n      }\n  \n      for (const type of otherTransferables) {\n        if (typeof globalContext[type] !== 'undefined' && obj[prop] instanceof globalContext[type]) {\n          transferableObjects.push(obj[prop]);\n          break;\n        }\n      }\n    }\n  \n    return typedArrayBuffers.concat(transferableObjects);\n  }\n\n  /**\n  * @function typedArrayFromBuffer - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'Uint32': Uint32Array,\n      'Uint16': Uint16Array,\n      'Uint8': Uint8Array,\n      'Uint8clamped': Uint8ClampedArray,\n      'Int32': Int32Array,\n      'Int16': Int16Array,\n      'Int8': Int8Array,\n      'Float32': Float32Array,\n      'Float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return buffer;\n    }\n    return new types[dataType](buffer);\n  }\n\n  /**\n  * @function prepareWorkerTask - Prepares function for thread, strips whitespace\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareWorkerTask(functionBody) {\n    let functionString = String(functionBody);\n    return functionString.substring((functionString.indexOf(\"{\") + 1), (functionString.length -1));\n  }\n\n  /**\n  * @function sortTaskOutput - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortTaskOutput(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n   * @function getBufferSize - Gets the byte length of the input array\n   * @param {TypedArray} array - The input typed array\n   * @returns {number} - The byte length of the array\n   */\n  getBufferSize(array) {\n    return array.byteLength;\n  }\n\n  /**\n   * @function createSharedBuffer - Creates a SharedArrayBuffer based on the input array's byte length\n   * @param {TypedArray} array - The input typed array\n   * @returns {SharedArrayBuffer} - The created SharedArrayBuffer\n   */\n  createSharedBuffer(array) {\n    const byteLength = this.getBufferSize(array);\n    const sharedBuffer = new SharedArrayBuffer(byteLength);\n    const sharedArray = new array.constructor(sharedBuffer);\n\n    // Copy data from the input array to the shared array\n    sharedArray.set(array);\n\n    return sharedBuffer;\n  }\n\n  /**\n   * @function setupSharedArrayBuffer - Sets up the shared buffer and corresponding typed array\n   * @param {TypedArray} array - The input typed array\n   * @returns {object} - SharedArrayBuffer;\n   */\n  setupSharedArrayBuffer(array) {\n    return this.createSharedBuffer(array);\n  }\n\n  /**\n  * @function aggregateThreadOutputs - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  aggregateThreadOutputs(input, dataType) {\n    if(!dataType) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  /**\n  * @function addThreadOutputWithIndex - Joins individual thread outputs into single result\n  * @param {object} task - Hamsters task object\n  * @param {object} index - Index information\n  * @param {array} output - Output array\n  */\n  addThreadOutputWithIndex(task, index, output) {\n    let i = 0;\n    const outputLength = output.length;\n    for (i; i < outputLength; i++) {\n      task.output[(index.start + i)] = output[i];\n    }\n  }\n\n  /**\n   * @function calculateIndexes - Splits a single array into multiple equal sized subarrays\n   * @param {array} array - Array to split\n   * @param {number} n - Number of subarrays to create\n   */\n  calculateIndexes(array, n) {\n    // If n is 1, return the whole array range\n    if (n === 1) {\n      return [{ start: 0, end: array.length - 1 }];\n    }\n\n    const indexes = [];\n    const segmentSize = Math.floor(array.length / n);\n    let startIndex = 0;\n\n    for (let i = 0; i < n; i++) {\n      const endIndex = startIndex + segmentSize - 1;\n      indexes.push({ start: startIndex, end: endIndex });\n      startIndex = endIndex + 1;\n    }\n\n    // Adjust the last segment to cover any remaining elements\n    if (startIndex < array.length) {\n      indexes[n - 1].end = array.length - 1;\n    }\n\n    return indexes;\n  }\n  \n\n  /**\n  * @function getSubArrayUsingIndex - Slices subarray based on provided index\n  * @param {object} index - Index information\n  * @param {object} task - Hamsters task object\n  */\n  getSubArrayUsingIndex(index, task) {\n    return task.input.array.slice(index.start, index.end + 1);\n  }\n}\n\nmodule.exports = Data;\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","class Wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold.bind(this);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      var port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        this.params = incomingMessage.data;\n        this.rtn = {\n          data: [],\n          dataType: this.params.dataType\n        };\n        eval(\"(\" + this.params.hamstersJob + \")\")();\n        port.postMessage(this.rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n   * @function regularScaffold - Provides worker body for library functionality\n   */\n  regularScaffold() {\n    self.params = {};\n    self.rtn = {};\n\n    self.onmessage = function(message) {\n      this.params = message.data;\n      this.rtn = {\n        data: [],\n        dataType: (typeof this.params.dataType !== 'undefined' ? this.params.dataType : null),\n        index: this.params.index\n      };\n      if (this.params.sharedBuffer) {\n        this.params.sharedArray = typedArrayFromBuffer(this.params.dataType, this.params.sharedBuffer);\n      }\n      eval(this.params.hamstersJob);\n      const buffers = handleDataType(this.rtn);\n      returnResponse(this.rtn, buffers);\n    }.bind(this);\n\n    function handleDataType(rtn) {\n      if (this.params.sharedArray) {\n        // Do nothing here, we don't need to return a buffer rtn.data is useless here\n      } else if(this.params.dataType) {\n        rtn.data = typedArrayFromBuffer(rtn.dataType, rtn.data);\n      }\n      return getTransferableObjects(rtn); // Return transferable objects\n    }\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      var types = {\n        'Uint32': Uint32Array,\n        'Uint16': Uint16Array,\n        'Uint8': Uint8Array,\n        'Uint8clamped': Uint8ClampedArray,\n        'Int32': Int32Array,\n        'Int16': Int16Array,\n        'Int8': Int8Array,\n        'Float32': Float32Array,\n        'Float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function returnResponse(rtn, buffers) {\n      if (buffers && buffers.length > 0) {\n        // If there are buffers, postMessage with transferable objects\n        postMessage(rtn, buffers);\n      } else {\n        // Otherwise, postMessage without transferable objects\n        postMessage(rtn);\n      }\n    }\n\n    function getTransferableObjects(obj) {\n      const typedArrayBuffers = [];\n      const transferableObjects = [];\n      const typedArrayTypes = [\n        'Int32Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array', \n        'Uint16Array', 'Uint32Array', 'Float32Array', 'Float64Array'\n      ];\n      const otherTransferables = [\n        'ArrayBuffer', 'MessagePort', 'ImageBitmap', 'OffscreenCanvas'\n      ];\n\n      const globalContext = typeof self !== 'undefined' ? self : window;\n\n      for (const prop in obj) {\n        for (const type of typedArrayTypes) {\n          if (typeof globalContext[type] !== 'undefined' && obj[prop] instanceof globalContext[type]) {\n            typedArrayBuffers.push(obj[prop].buffer);\n            break;\n          }\n        }\n\n        for (const type of otherTransferables) {\n          if (typeof globalContext[type] !== 'undefined' && obj[prop] instanceof globalContext[type]) {\n            transferableObjects.push(obj[prop]);\n            break;\n          }\n        }\n      }\n\n      return typedArrayBuffers.concat(transferableObjects);\n    }\n  }\n\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(params, resolve, reject) {\n    var rtn = {\n      data: [],\n      dataType: (typeof params.dataType !== \"undefined\" ? params.dataType : null)\n    };\n    if(this.hamsters.habitat.reactNative) {\n      self.rtn = rtn;\n    }\n    if(this.hamsters.habitat.node || this.hamsters.habitat.isIE) {\n      eval(params.hamstersJob);\n    } else {\n      params.hamstersJob();\n    }\n    resolve(rtn.data);\n  }\n}\n\nmodule.exports = Wheel;\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","/**\n * @class HamstersTask\n * @classdesc Constructs a new task object from provided arguments for Hamsters.js\n */\nclass Task {\n    /**\n     * @constructor\n     * @param {object} habitat - The environment settings\n     * @param {object} data - Data utility methods\n     * @param {object} params - Provided library execution options\n     * @param {function} functionToRun - Function to execute\n     */\n    constructor(hamsters, params, functionToRun) {\n      'use strict';\n\n      this.input = params;\n      this.output = [];\n      this.scheduler = {\n        count: 0,\n        threads: params.threads || 1,\n        workers: []\n      };\n  \n      if (hamsters.habitat.legacy) {\n        this.setupLegacyTask(hamsters, functionToRun);\n      } else {\n        this.setupModernTask(hamsters, params, functionToRun);\n      }\n  \n      if (hamsters.habitat.debug) {\n        this.setupDebugMetrics();\n      }\n    }\n  \n    /**\n     * @method setupLegacyTask\n     * @description Sets up task for legacy environments\n     * @param {function} functionToRun - Function to execute\n     */\n    setupLegacyTask(hamsters, functionToRun) {\n      this.scheduler.threads = 1;\n      if (!hamsters.habitat.node && !hamsters.habitat.isIE) {\n        this.input.hamstersJob = functionToRun;\n      }\n    }\n  \n    /**\n     * @method setupModernTask\n     * @description Sets up task for modern environments\n     * @param {object} params - Provided library execution options\n     * @param {function} functionToRun - Function to execute\n     */\n    setupModernTask(hamsters, params, functionToRun) {\n      this.input.hamstersJob = hamsters.habitat.legacy ? functionToRun : hamsters.data.prepareFunction(functionToRun);\n      if (params.sharedArray && hamsters.habitat.atomics) {\n        this.scheduler.indexes = params.indexes || hamsters.data.getSubArrayIndexes(params.sharedArray, this.scheduler.threads);\n        this.scheduler.sharedBuffer = hamsters.data.setupSharedArrayBuffer(params.sharedArray);\n      } else {\n        this.scheduler.indexes = params.indexes || hamsters.data.getSubArrayIndexes(params.array, this.scheduler.threads);\n      }\n    }\n  \n    /**\n     * @method setupDebugMetrics\n     * @description Sets up debug metrics if debug mode is enabled\n     */\n    setupDebugMetrics() {\n      this.scheduler.metrics = {\n        created_at: Date.now(),\n        started_at: null,\n        completed_at: null,\n        threads: []\n      };\n    }\n  }\n  \n  module.exports = Task;\n  \n\n\n// WEBPACK FOOTER //\n// ./core/task.js","import NodeStore from './stores/NodeStore';\nimport WebStore from './stores/WebStore';\n\nclass Memoize {\n    constructor(hamsters, maxSize) {\n        'use strict';\n\n        this.hamsters = hamsters;\n        this.store = this.hamsters.habitat.node ? new NodeStore(maxSize) : new WebStore('hamstersjs', 'cacheStore', maxSize);\n    }\n\n    memoize(func) {\n        const self = this;\n        return function(task) {\n            const key = self.generateTaskKey(task);\n\n            return new Promise(function(resolve, reject) {\n                self.store.get(key).then(function(cachedResult) {\n                    if (cachedResult !== null) {\n                        resolve(cachedResult);\n                    } else {\n                        self.applyFunc(func, task).then(function(result) {\n                            self.store.set(key, result).then(function() {\n                                resolve(result);\n                            }).catch(reject);\n                        }).catch(reject);\n                    }\n                }).catch(reject);\n            });\n        };\n    }\n\n    generateTaskKey(task) {\n        const key = JSON.stringify({ input: task.input });\n        return this.hashCode(key);\n    }\n\n    hashCode(str) {\n        let hash = 0, i, chr;\n        if (str.length === 0) return hash;\n        for (i = 0; i < str.length; i++) {\n            chr = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return hash.toString();\n    }\n\n    applyFunc(func, args) {\n        return new Promise((resolve, reject) => {\n            try {\n                const result = func.apply(null, args);\n                resolve(result);\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n}\n\nmodule.exports = Memoize;\n\n\n// WEBPACK FOOTER //\n// ./feature/memoize.js","class NodeStore {\n    constructor(maxSize) {\n        this.maxSize = maxSize;\n        this.cache = new Map();\n    }\n\n    get(key) {\n        if (this.cache.has(key)) {\n            const value = this.cache.get(key);\n            // Refresh the key\n            this.cache.delete(key);\n            this.cache.set(key, value);\n            return Promise.resolve(value);\n        }\n        return Promise.resolve(null);\n    }\n\n    set(key, value) {\n        if (this.cache.size >= this.maxSize) {\n            // Remove the oldest (least recently used) entry\n            const oldestKey = this.cache.keys().next().value;\n            this.cache.delete(oldestKey);\n        }\n        this.cache.set(key, value);\n        return Promise.resolve();\n    }\n\n    clear() {\n        this.cache.clear();\n        return Promise.resolve();\n    }\n}\n\nmodule.exports = NodeStore;\n\n\n\n// WEBPACK FOOTER //\n// ./feature/stores/NodeStore.js","class WebStore {\n    constructor(dbName, storeName, maxSize) {\n        this.dbName = dbName;\n        this.storeName = storeName;\n        this.maxSize = maxSize;\n        this.db = null;\n        this.initDB();\n    }\n\n    initDB() {\n        const self = this;\n        const request = indexedDB.open(this.dbName, 1);\n\n        request.onerror = function(event) {\n            console.error('Error opening database:', event.target.error);\n        };\n\n        request.onupgradeneeded = function(event) {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains(self.storeName)) {\n                const objectStore = db.createObjectStore(self.storeName, { keyPath: 'key' });\n                objectStore.createIndex('by_key', 'key', { unique: true });\n                objectStore.createIndex('by_timestamp', 'timestamp');\n            }\n        };\n\n        request.onsuccess = function(event) {\n            self.db = event.target.result;\n        };\n    }\n\n    get(key) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve(null);\n                return;\n            }\n\n            const transaction = self.db.transaction([self.storeName], 'readonly');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.get(key);\n\n            request.onsuccess = function(event) {\n                const result = event.target.result;\n                if (result) {\n                    self.updateTimestamp(key).then(() => resolve(result.value)).catch(reject);\n                } else {\n                    resolve(null);\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    set(key, value) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve();\n                return;\n            }\n\n            self.checkSize().then(() => {\n                const transaction = self.db.transaction([self.storeName], 'readwrite');\n                const objectStore = transaction.objectStore(self.storeName);\n                const request = objectStore.put({ key: key, value: value, timestamp: Date.now() });\n\n                request.onsuccess = function() {\n                    resolve();\n                };\n\n                request.onerror = function(event) {\n                    reject(event.target.error);\n                };\n            }).catch(reject);\n        });\n    }\n\n    clear() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            if (!self.db) {\n                console.error('Database not initialized');\n                resolve();\n                return;\n            }\n\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.clear();\n\n            request.onsuccess = function() {\n                resolve();\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    checkSize() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readonly');\n            const objectStore = transaction.objectStore(self.storeName);\n            const countRequest = objectStore.count();\n\n            countRequest.onsuccess = function() {\n                const count = countRequest.result;\n                if (count >= self.maxSize) {\n                    self.evictOldest().then(resolve).catch(reject);\n                } else {\n                    resolve();\n                }\n            };\n\n            countRequest.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    evictOldest() {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const index = objectStore.index('by_timestamp');\n            const request = index.openCursor(null, 'next');\n\n            request.onsuccess = function(event) {\n                const cursor = event.target.result;\n                if (cursor) {\n                    cursor.delete().onsuccess = function() {\n                        resolve();\n                    };\n                } else {\n                    resolve();\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n\n    updateTimestamp(key) {\n        const self = this;\n        return new Promise(function(resolve, reject) {\n            const transaction = self.db.transaction([self.storeName], 'readwrite');\n            const objectStore = transaction.objectStore(self.storeName);\n            const request = objectStore.get(key);\n\n            request.onsuccess = function(event) {\n                const data = event.target.result;\n                if (data) {\n                    data.timestamp = Date.now();\n                    objectStore.put(data).onsuccess = function() {\n                        resolve();\n                    };\n                } else {\n                    resolve();\n                }\n            };\n\n            request.onerror = function(event) {\n                reject(event.target.error);\n            };\n        });\n    }\n}\n\nmodule.exports = WebStore;\n\n\n\n// WEBPACK FOOTER //\n// ./feature/stores/WebStore.js","class Distribute {\n  constructor(hamsters) {\n    'use strict';\n\n    this.hamsters = hamsters;\n    this.localConnection = null;\n    this.remoteConnections = {};\n    this.sendChannels = {};\n    this.receiveChannels = {};\n    this.pcConstraint = null;\n    this.dataConstraint = null;\n    this.ws = null;\n    this.connectionTargets = []; // New property to hold the connection targets\n    this.clientId = null; // New property to store the client's own ID\n\n    // Initialize elements\n    this.dataChannelSend = document.getElementById('dataChannelSend');\n    this.clientSelect = document.getElementById('clientSelect');\n\n    this.initWebSocket();\n\n    // Add event listener for connect button\n    document.getElementById('connectButton').addEventListener('click', () => {\n      this.createConnection();\n    });\n  }\n\n  initWebSocket() {\n    this.ws = new WebSocket(`ws://${window.location.host}`);\n    \n    this.ws.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    \n    this.ws.onmessage = (event) => {\n      const message = JSON.parse(event.data);\n      switch (message.type) {\n        case 'register':\n          this.clientId = message.id;\n          this.loadClientList();\n          break;\n        case 'update-client-list':\n          this.updateClientList(message.clients);\n          break;\n        case 'offer':\n          this.handleOffer(message);\n          break;\n        case 'answer':\n          this.handleAnswer(message);\n          break;\n        case 'candidate':\n          this.handleCandidate(message);\n          break;\n        default:\n          console.log('Unknown message type:', message.type);\n      }\n    };\n\n    this.ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    this.ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n  }\n\n  updateClientList(clients) {\n    this.connectionTargets = clients.map(client => client.id);\n    this.displayClientList(); // Method to update the UI\n  }\n\n  displayClientList() {\n    // Ensure that this method clears the list before updating to avoid duplicates\n    this.clientSelect.innerHTML = '';\n    this.connectionTargets.forEach(clientId => {\n      const option = document.createElement('option');\n      option.value = clientId;\n      option.text = clientId;\n      this.clientSelect.appendChild(option);\n    });\n  }\n\n  loadClientList() {\n    fetch(`/clients?currentId=${this.clientId}`)\n      .then(response => response.json())\n      .then(data => {\n        this.connectionTargets = data.map(client => client.id);\n        this.createConnection(); // Automatically create connections after fetching client list\n      })\n      .catch(error => console.error('Error fetching client list:', error));\n  }\n\n  createConnection() {\n    if (!this.connectionTargets.length) {\n      return alert('No clients to connect to.');\n    }\n\n    this.dataChannelSend.placeholder = '';\n    const servers = null;\n\n    this.connectionTargets.forEach(targetClient => {\n      const localConnection = new RTCPeerConnection(servers, this.pcConstraint);\n      const sendChannel = localConnection.createDataChannel('hamstersjs', this.dataConstraint);\n\n      localConnection.onicecandidate = (e) => {\n        if (e.candidate) {\n          this.ws.send(JSON.stringify({ type: 'candidate', target: targetClient, candidate: e.candidate }));\n        }\n      };\n\n      sendChannel.onopen = () => {\n        this.onSendChannelStateChange();\n        this.sendData({ targetClient, data: 'Initial connection established' }); // Send initial data\n      };\n      sendChannel.onclose = this.onSendChannelStateChange.bind(this);\n\n      // Store connections and channels\n      this.remoteConnections[targetClient] = localConnection;\n      this.sendChannels[targetClient] = sendChannel;\n\n      localConnection.createOffer().then(desc => {\n        localConnection.setLocalDescription(desc);\n        this.ws.send(JSON.stringify({ type: 'offer', target: targetClient, offer: desc }));\n      }).catch(this.onCreateSessionDescriptionError);\n    });\n  }\n\n  handleOffer(data) {\n    const targetClient = data.from;\n    const remoteConnection = new RTCPeerConnection(null, this.pcConstraint);\n\n    remoteConnection.onicecandidate = (e) => {\n      if (e.candidate) {\n        this.ws.send(JSON.stringify({ type: 'candidate', target: targetClient, candidate: e.candidate }));\n      }\n    };\n    remoteConnection.ondatachannel = this.receiveChannelCallback.bind(this);\n\n    remoteConnection.setRemoteDescription(new RTCSessionDescription(data.offer)).then(() => {\n      return remoteConnection.createAnswer();\n    }).then(desc => {\n      remoteConnection.setLocalDescription(desc);\n      this.ws.send(JSON.stringify({ type: 'answer', target: targetClient, answer: desc }));\n    }).catch(this.onCreateSessionDescriptionError);\n\n    // Store the remote connection\n    this.remoteConnections[targetClient] = remoteConnection;\n  }\n\n  handleAnswer(data) {\n    const connection = this.remoteConnections[data.from];\n    connection.setRemoteDescription(new RTCSessionDescription(data.answer));\n  }\n\n  handleCandidate(data) {\n    const connection = this.remoteConnections[data.from];\n    connection.addIceCandidate(new RTCIceCandidate(data.candidate)).catch(this.onAddIceCandidateError);\n  }\n\n  sendData(data) {\n    const { targetClient, data: payload } = data;\n    const sendChannel = this.sendChannels[targetClient];\n    \n    if (sendChannel.readyState === 'open') {\n      sendChannel.send(JSON.stringify(payload));\n      this.trace('Sent Data to ' + targetClient + ': ' + payload);\n    } else {\n      sendChannel.onopen = () => {\n        sendChannel.send(JSON.stringify(payload));\n        this.trace('Sent Data to ' + targetClient + ': ' + payload);\n      };\n    }\n  }\n\n  closeDataChannels() {\n    for (const targetClient in this.sendChannels) {\n      this.sendChannels[targetClient].close();\n      if (this.receiveChannels[targetClient]) this.receiveChannels[targetClient].close();\n      this.remoteConnections[targetClient].close();\n    }\n    this.localConnection = null;\n    this.remoteConnections = {};\n    this.sendChannels = {};\n    this.receiveChannels = {};\n  }\n\n  receiveChannelCallback(event) {\n    const receiveChannel = event.channel;\n    receiveChannel.onmessage = this.onReceiveMessageCallback.bind(this);\n    receiveChannel.onopen = this.onReceiveChannelStateChange.bind(this);\n    receiveChannel.onclose = this.onReceiveChannelStateChange.bind(this);\n\n    // Store the receive channel\n    this.receiveChannels[event.targetClient] = receiveChannel;\n  }\n\n  onReceiveMessageCallback(event) {\n    console.log(event.data);\n  }\n\n  onSendChannelStateChange() {\n    // Handle send channel state change if needed\n  }\n\n  onReceiveChannelStateChange() {\n    // Handle receive channel state change if needed\n  }\n\n  trace(arg) {\n    const now = (window.performance.now() / 1000).toFixed(3);\n    console.log(now + ': ', arg);\n  }\n\n  onCreateSessionDescriptionError(error) {\n    this.trace('Failed to create session description: ' + error.toString());\n  }\n\n  onAddIceCandidateError(error) {\n    this.trace('Failed to add Ice Candidate: ' + error.toString());\n  }\n}\n\nmodule.exports = Distribute;\n\n\n\n// WEBPACK FOOTER //\n// ./feature/distribute.js"],"sourceRoot":""}