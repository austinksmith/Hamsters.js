{"version":3,"sources":["webpack:///webpack/bootstrap 2503441300ab7000c50d","webpack:///./hamsters.js","webpack:///./core/version.js","webpack:///./core/habitat.js","webpack:///../~/node-libs-browser/~/process/browser.js","webpack:///./core/data.js","webpack:///./core/logger.js","webpack:///./core/wheel.js","webpack:///./core/pool.js","webpack:///./core/memoizer.js"],"names":["hamstersjs","version","init","initializeLibrary","startOptions","processStartOptions","legacy","persistence","spawnHamsters","maxThreads","info","legacyMode","habitatKeys","key","Object","keys","indexOf","toLowerCase","habitat","data","logger","memoizer","run","hamstersRun","promise","hamstersPromise","params","functionToRun","newHamstersTaskId","tasks","length","newHamstersTask","id","count","aggregate","output","workers","memoize","dataType","input","threads","hamstersJob","prepareJob","task","resolve","reject","scheduleTask","then","results","catch","error","messsage","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","majorVersion","minorVersion","patchVersion","hamstersVersion","debug","importScripts","determineGlobalThreads","isLegacyEnvironment","legacyWheel","browser","isBrowser","webWorker","isWebWorker","node","isNode","reactNative","isReactNative","shell","isShell","transferrable","supportsTransferrableObjects","atomics","supportsAtomicOperations","proxies","supportsProxies","isIE10","isInternetExplorer","Worker","locateWorkerObject","sharedWorker","locateSharedWorkerObject","selectHamsterWheel","max","navigator","hardwareConcurrency","userAgent","os","cpus","SharedWorker","window","RegExp","isNaN","test","process","global","isLegacy","isLegacyDevice","supportsSharedWorkers","legacyDevice","lacksWorkerSupport","legacyAgents","supports","workerBlob","generateBlob","SharedHamster","e","Uint8Array","SharedArrayBuffer","Proxy","worker","regular","generateWorkerBlob","hamstersHabitat","randomArray","aggregateArrays","aggregateThreadOutputs","splitArrays","splitArrayIntoSubArrays","createBlob","createDataBlob","processDataType","sortOutput","sortArray","getOutput","prepareOutput","prepareFunction","feedHamster","messageWorker","hamster","hamsterFood","postMessage","JSON","stringify","ie10","port","parentPort","hamstersFood","preparedTransfer","prepareTransferBuffers","buffers","newBuffer","buffer","Array","isArray","ArrayBuffer","push","functionBody","String","startingIndex","endingIndex","substring","workerLogic","hamsterBlob","dataBlobURL","URL","createObjectURL","typedArrayFromBuffer","arr","order","prototype","sort","call","a","b","reverse","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","locateBlobBuilder","blob","append","type","getBlob","Math","round","random","reduce","concat","i","len","bufferLength","offset","set","array","n","threadArrays","size","ceil","slice","subarray","hamstersData","logBook","warning","infoLog","warningLog","errorLog","errorFromThread","saveLogEntry","saveToLogBook","getLogEntries","fetchLogBook","createAndSaveStampedMessage","generateTimeStampedMessage","searchLogEntries","searchLogBook","message","timeStampedMessage","console","warn","record","Date","now","errorMessage","lineno","filename","eventType","logBookEntries","searchString","searchResults","eventTypeResults","tmpEntries","hasOwnProperty","findStringInLogBook","finalResults","findStringInLogBookAllTypes","total","hamstersLogger","wheel","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","ports","start","incomingMessage","eval","prepareReturn","returnObject","onmessage","Function","setTimeout","hamstersWheel","pool","running","pending","fetchHamster","grabHamster","arguments","item","runTask","threadId","spawnHamster","newWheel","threadArray","prepareMeal","registerTask","keepTrackOfThread","trainHamster","addWorkToPending","onThreadResponse","splice","parse","returnOutputAndRemoveTask","processQueue","shift","terminate","onThreadError","onmessageerror","onerror","hamsterWheel","hamsterPool","maxCacheEntries","cacheEntries","itemCached","isItemCached","fetchItem","fetchItemFromCache","saveItem","saveItemToCache","method","fn","cacheItem","cachedResult","itemToCache","cachedItems","hamstersMemoizer"],"mappings":"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","file":"hamsters.web.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2503441300ab7000c50d","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './core/version';\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\nimport hamstersLogger from './core/logger';\nimport hamstersMemoizer from './core/memoizer';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.version = hamstersVersion;\n    this.init = this.initializeLibrary;\n  }\n\n  /**\n  * @function initializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  initializeLibrary(startOptions) {\n    this.processStartOptions(startOptions);\n    if(!hamstersHabitat.legacy && hamstersHabitat.persistence === true) {\n      hamstersPool.spawnHamsters(hamstersHabitat.maxThreads);\n    }\n    hamstersLogger.info(`Initialized using up to ${hamstersHabitat.maxThreads} threads.`);\n    delete this.init;\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    let legacyMode= false;\n    if (typeof startOptions !== 'undefined') {\n      // Add options to override library environment behavior\n      let habitatKeys = [\n        'worker', 'sharedworker',\n        'legacy', 'webworker',\n        'reactnative', 'atomics',\n        'proxies', 'transferrable',\n        'browser', 'shell', \n        'node', 'debug',\n        'persistence', 'importscripts',\n        'maxThreads', 'parentPort'\n      ];\n      let key = null;\n      for (key of Object.keys(startOptions)) {\n        if (habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n          hamstersHabitat[key] = startOptions[key];\n        } else {\n          this[key] = startOptions[key];\n        }\n      }\n      if(startOptions['legacy'] === true) {\n        legacyMode = true;\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    if(typeof hamstersHabitat['Worker'] === 'function' && !legacyMode) {\n      hamstersHabitat.legacy = false;\n    }\n    // Finished initializing, add methods & imports\n    this.habitat = hamstersHabitat;\n    this.maxThreads = hamstersHabitat.maxThreads;\n    this.data = hamstersData;\n    this.logger = hamstersLogger;\n    this.memoizer = hamstersMemoizer;\n    this.run = this.hamstersRun;\n    this.promise = this.hamstersPromise;\n  }\n\n  /**\n  * @constructor\n  * @function hamstersTask - Constructs a new task object from provided arguments\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {object} new Hamsters.js task\n  */\n  hamstersTask(params, functionToRun) {\n    let newHamstersTaskId = hamstersPool.tasks.length;\n    let newHamstersTask = {\n      id: newHamstersTaskId,\n      count: 0,\n      aggregate: (params.aggregate || false),\n      output: [],\n      workers: [],\n      memoize: (params.memoize || false),\n      dataType: (params.dataType ? params.dataType.toLowerCase() : null),\n      input: params\n    };\n    // Do not modify function if we're running on the main thread for legacy fallback\n    if(hamstersHabitat.legacy) {\n      newHamstersTask.threads = 1;\n      newHamstersTask.input.hamstersJob = functionToRun;\n    } else {\n      newHamstersTask.threads = (params.threads || 1);\n      newHamstersTask.input.hamstersJob = hamstersData.prepareJob(functionToRun);\n    }\n    return newHamstersTask;\n  }\n\n  scheduleTask(task, resolve, reject) {\n    hamstersPool.scheduleTask(task).then((results) => {\n      return resolve(results);\n    }).catch((error) => {\n      return hamstersLogger.error(error.messsage, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersPromise - Calls library functionality using async promises\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {array} Results from functionToRun.\n  */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      let task = this.hamstersTask(params, functionToRun);\n      this.scheduleTask(task, resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @param {function} onSuccess - Function to call upon successful execution\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    let task = this.hamstersTask(params, functionToRun);\n    this.scheduleTask(task, onSuccess, onError);\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nconst majorVersion = 5;\nconst minorVersion = 1;\nconst patchVersion = 3;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/version.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersData from './data';\nimport hamstersWheel from './wheel';\n\nclass habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.debug = false;\n    this.importScripts = null;\n    this.maxThreads = this.determineGlobalThreads();\n    this.memoize = false;\n    this.persistence = true;\n    this.legacy = this.isLegacyEnvironment();\n    this.legacyWheel = hamstersWheel.legacy;\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferrable = this.supportsTransferrableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE10 = !this.isNode() && !this.isReactNative() && this.isInternetExplorer(10);\n    this.Worker = this.locateWorkerObject();\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.selectHamsterWheel = this.selectHamsterWheel;\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      if(max > 20 && navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        max = 20;\n      }\n    }\n    if(this.node && typeof os !== 'undefined') {\n      max = os.cpus().length;\n    }\n    return max;\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return typeof Worker !== 'undefined' ? Worker : false;\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return typeof SharedWorker !== 'undefined' ? SharedWorker : false;\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser;\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a webworker\n  */\n  isWebWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is reactNative\n  */\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object' && !this.browser;\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return this.browser && !this.isNode() && !this.isWebWorker() && !this.isReactNative();\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = false;\n    // Force legacy mode for known devices that don't support threading\n    if (this.browser && !this.isReactNative()) {\n      isLegacy = this.isLegacyDevice();\n    }\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy || !!!this.locateWorkerObject();\n  }\n\n  isLegacyDevice() {\n    let legacyDevice = false;\n    let userAgent = navigator.userAgent;\n    let lacksWorkerSupport = (typeof this.Worker === 'undefined');\n    let legacyAgents = ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'];\n    if (lacksWorkerSupport || legacyAgents.indexOf(userAgent) !== -1) {\n      legacyDevice = true;\n    }\n    return legacyDevice;\n  }\n\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = hamstersData.generateBlob();\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function supportsTransferrableObjects - Detects if execution environment supports typed arrays\n  */\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports shared array buffers\n  */\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports proxy objects\n  */\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n\n  /**\n  * @function scheduleTask - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE10) {\n      return './common/hamstersWheel.js';\n    }\n    if(this.reactNative) {\n      return './common/rnHamstersWheel.js';\n    }\n    if(this.webWorker) {\n      return hamstersWheel.worker;\n    }\n    if (this.node) {\n      return hamstersWheel.regular;\n    }\n    return hamstersData.generateWorkerBlob(hamstersWheel.regular);\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/node-libs-browser/~/process/browser.js\n// module id = 4\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersHabitat from './habitat';\nimport hamstersLogger from './logger';\n\nclass data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.splitArrays = this.splitArrayIntoSubArrays;\n    this.createBlob = this.createDataBlob;\n    this.generateWorkerBlob = this.generateWorkerBlob;\n    this.processDataType = this.processDataType;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n    this.prepareJob = this.prepareFunction;\n    this.feedHamster = this.messageWorker;\n  }\n\n  /**\n  * @function messageWorker - Prepares message to send to thread\n  * @param {worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorker(hamster, hamsterFood) {\n    if(hamstersHabitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (hamstersHabitat.ie10) {\n      return hamster.postMessage(hamsterFood);\n    }\n    if (hamstersHabitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    if(hamstersHabitat.node && typeof hamstersHabitat.parentPort !== 'undefined') {\n      return hamsters.parentPort.postMessage(hamstersFood);\n    }\n    let preparedTransfer = this.prepareTransferBuffers(hamsterFood);\n    return hamster.postMessage(preparedTransfer['hamsterFood'], preparedTransfer['buffers']);\n  }\n\n  /**\n  * @function prepareTransferBuffers - Prepares transferrable buffers for faster message passing\n  * @param {object} hamsterFood - Message to send to thread\n  */\n  prepareTransferBuffers(hamsterFood, transferrable) {\n    let buffers = [];\n    let key, newBuffer;\n    if(hamstersHabitat.transferrable) {\n      for (key of Object.keys(hamsterFood)) {\n        newBuffer = null;\n        if(hamsterFood[key].buffer) {\n          newBuffer = hamsterFood[key].buffer;\n        } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n          newBuffer = new ArrayBuffer(hamsterFood[key]);\n        }\n        if(newBuffer) {\n          buffers.push(newBuffer);\n          hamsterFood[key] = newBuffer;\n        }\n      }\n    }\n    return {\n      hamsterFood: hamsterFood,\n      buffers: buffers\n    };\n  }\n\n  /**\n  * @function prepareFunction - Prepares transferrable buffers for faster message passing\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareFunction(functionBody) {\n    functionBody = String(functionBody);\n    if (!hamstersHabitat.webWorker) {\n      let startingIndex = (functionBody.indexOf(\"{\") + 1);\n      let endingIndex = (functionBody.length - 1);\n      return functionBody.substring(startingIndex, endingIndex);\n    }\n    return functionBody;\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates blob uri for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    let hamsterBlob = this.createDataBlob('(' + String(workerLogic) + ')();');\n    let dataBlobURL = URL.createObjectURL(hamsterBlob);\n    return dataBlobURL;\n  }\n\n  /**\n  * @function processDataType - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  processDataType(dataType, buffer, transferrable) {\n    if(transferrable) {\n      return this.typedArrayFromBuffer(dataType, buffer);\n    }\n    return buffer;\n  }\n\n  /**\n  * @function prepareOutput - Prepares final task output\n  * @param {task} buffer - Task to prepare output for\n  */\n  prepareOutput(task, transferrable) {\n    if(task.aggregate && task.threads !== 1) {\n      return this.aggregateThreadOutputs(task.output, task.dataType, transferrable);\n    }\n    return task.output;\n  }\n\n  /**\n  * @function sortArray - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n  * @function typedArrayFromBuffer - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n\n  /**\n  * @function createDataBlob - Attempts to locate data blob builder, vender prefixes galore\n  */\n  locateBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return hamstersLogger.error('Environment does not support data blobs!');\n  }\n\n  /**\n  * @function createDataBlob - Creates new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function randomArray - Creates new random array\n  * @param {number} count - Number of random elements in array\n  * @param {function} onSuccess - onSuccess callback\n  */\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  /**\n  * @function aggregateThreadOutputs - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  aggregateThreadOutputs(input, dataType, transferrable) {\n    if(!dataType || !transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength, transferrable);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  /**\n  * @function splitArrayIntoSubArrays - Splits a single array into multiple equal sized subarrays\n  * @param {array} array - Array to split\n  * @param {number} n - Number of subarrays to create\n  */\n  splitArrayIntoSubArrays(array, n) {\n    let i = 0;\n    let threadArrays = [];\n    let size = Math.ceil(array.length/n);\n    if(array.slice) {\n      while(i < array.length) {\n        threadArrays.push(array.slice(i, i += size));\n      }\n    } else {\n      while (i < array.length) {\n        threadArrays.push(array.subarray(i, i += size));\n      }\n    }\n    return threadArrays;\n  }\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './version';\n\nclass logger {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.logBook = {\n      error: [], \n      warning: [], \n      info: []\n    };\n    this.info = this.infoLog;\n    this.warning = this.warningLog;\n    this.error = this.errorLog;\n    this.errorFromThread = this.errorFromThread;\n    this.saveLogEntry = this.saveToLogBook;\n    this.getLogEntries = this.fetchLogBook;\n    this.createAndSaveStampedMessage = this.generateTimeStampedMessage;\n    this.searchLogEntries = this.searchLogBook;\n  }\n\n  infoLog(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Info', message);\n    console.info(timeStampedMessage);\n  }\n\n  warningLog(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Warning', message);\n    console.warn(timeStampedMessage);\n  }\n\n  errorLog(message, reject) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Error', message);\n    console.error(timeStampedMessage);\n    if(reject) {\n      reject(timeStampedMessage);\n    } else {\n      return timeStampedMessage;\n    }\n  }\n\n  generateTimeStampedMessage(type, message) {\n    let record = `Hamsters.js v${hamstersVersion} ${type}: ${message} @ ${Date.now()}`\n    this.saveLogEntry(type.toLowerCase(), record);\n    return record;\n  }\n\n  errorFromThread(error, reject) {\n    let errorMessage = `#${error.lineno} in ${error.filename}: ${error.message}`;\n    this.errorLog(errorMessage, reject);\n  }\n\n  saveToLogBook(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  fetchLogBook(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInLogBook(logBookEntries, searchString) {\n    let searchResults = [];\n    let i = 0;\n    for (i; i < logBookEntries.length; i++) {\n      if(logBookEntries[i].indexOf(searchString) !== -1) {\n        searchResults.push(logBookEntries[i]);\n      }\n    }\n    return searchResults;\n  }\n\n  findStringInLogBookAllTypes(logBook, searchString) {\n    let searchResults = [];\n    let key, eventTypeResults, tmpEntries = null;\n    for(key in logBook) {\n      if(logBook.hasOwnProperty(key)) {\n        tmpEntries = logBook[key];\n        eventTypeResults = this.findStringInLogBook(tmpEntries, searchString);\n        for (var i = eventTypeResults.length - 1; i >= 0; i--) {\n          searchResults.push(eventTypeResults[i])\n        }\n      }\n    }\n    return searchResults;\n  }\n\n  searchLogBook(searchString, eventType) {\n    let finalResults = [];\n    if(eventType) {\n      finalResults = this.findStringInLogBook(this.logBook[eventType], searchString);\n    } else {\n      finalResults = this.findStringInLogBookAllTypes(this.logBook, searchString);\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamstersLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/logger.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nclass wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold;\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    'use strict';\n\n    if(typeof self === 'undefined') {\n      self = (global || window || this);\n    }\n\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      const port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        params = incomingMessage.data;\n        rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        if(params.importScripts) {\n          self.importScripts(params.importScripts);\n        }\n        eval(\"(\" + params.hamstersJob + \")\")();\n        port.postMessage(rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality\n  */\n  regularScaffold() {\n    'use strict';\n\n    if(typeof self === 'undefined') {\n      let self = (global || window || this);\n    }\n\n    self.params = {};\n    self.rtn = {};\n\n    function prepareReturn(returnObject) {\n      let dataType = returnObject.dataType;\n      if(dataType) {\n        returnObject.data = typedArrayFromBuffer(dataType, returnObject.data);\n      }\n      return returnObject;\n    }\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function prepareTransferBuffers(hamsterFood) {\n      let buffers = [];\n      let key, newBuffer;\n      for (key of Object.keys(hamsterFood)) {\n        newBuffer = null;\n        if (hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            newBuffer = hamsterFood[key].buffer;\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            newBuffer = new ArrayBuffer(hamsterFood[key]);\n          }\n        }\n        if(newBuffer) {\n          buffers.push(newBuffer);\n          hamsterFood[key] = newBuffer;\n        }\n      }\n      return {\n        hamsterFood: hamsterFood,\n        buffers: buffers\n      };\n    }\n\n    self.onmessage = function(incomingMessage) {\n      params = incomingMessage.data;\n      rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n      if(params.importScripts) {\n        self.importScripts(params.importScripts);\n      }\n      new Function(params.hamstersJob)();\n      let preparedTransfer = prepareTransferBuffers(prepareReturn(rtn));\n      postMessage(preparedTransfer['hamsterFood'], preparedTransfer['buffers']);\n    }\n  }\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(params, resolve) {\n    setTimeout(() => {\n      if(typeof self === 'undefined') {\n        var self = (global || window || this);\n      }\n      self.params = params;\n      self.rtn = {\n        data: []\n      };\n      params.hamstersJob();\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n};\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\nimport hamstersLogger from './logger';\n\nclass pool {\n\t\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.grabHamster;\n  }\n\n  /**\n  * @function grabHamster - Adds task to queue waiting for available thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(array, task, persistence, wheel, resolve, reject) {\n  \tthis.pending.push(arguments);\n  }\n\n  /**\n  * @function grabHamster - Invokes processing of next item in queue\n  * @param {object} item - Task to process\n  */\n  processQueue(item, hamster) {\n  \treturn this.runTask(hamster, item[0], item[1], item[2], item[3], item[4]);\n  }\n\n  /**\n  * @function grabHamster - Keeps track of threads running, scoped globally and to task\n  * @param {number} threadId - Id of thread\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  */\n  grabHamster(threadId) {\n    if(hamstersHabitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n\n  /**\n  * @function registerTask - Adds task to execution pool based on id\n  * @param {number} id - Id of task to register\n  */\n  registerTask(id) {\n    this.tasks.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {number} maxThreds - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    for (maxThreads; maxThreads > 0; maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} WebWorker - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    let newWheel = hamstersHabitat.selectHamsterWheel();\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(newWheel, 'SharedHamsterWheel');\n    }\n    if(hamstersHabitat.node && typeof hamstersHabitat.parentPort !== 'undefined') {\n      return new hamstersHabitat.Worker(newWheel, { eval: true });\n    }\n    return new hamstersHabitat.Worker(newWheel);\n  }\n\n  /**\n  * @function prepareMeal - Prepares message to send to a thread and invoke execution\n  * @param {object} threadArray - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @return {object} hamsterFood - Prepared message to send to a thread\n  */\n  prepareMeal(threadArray, task) {\n    let hamsterFood = {\n    \tarray: threadArray\n    };\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && ['array', 'threads'].indexOf(key) === -1) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  /**\n  * @function hamsterWheel - Runs function using thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, array, task, resolve, reject) {\n  \tlet threadId = this.running.length;\n    let hamsterFood = this.prepareMeal(array, task);\n    this.registerTask(task.id);\n    this.keepTrackOfThread(task, threadId);\n    if(hamstersHabitat.legacy) {\n      hamstersHabitat.legacyWheel(hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(task.count, task, hamster, resolve, reject);\n      hamstersData.feedHamster(hamster, hamsterFood);\n    }\n    task.count += 1; //Increment count, thread is running\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {object} array - Provided library functionality options for this task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(array, task, resolve, reject) {\n    if(hamstersHabitat.maxThreads === this.running.length) {\n      return this.addWorkToPending(array, task, resolve, reject);\n    }\n    let hamster = this.grabHamster(this.running.length);\n    return this.runTask(hamster, array, task, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    let output = hamstersData.getOutput(task, hamstersHabitat.transferrable);\n    if (task.sort) {\n      output = hamstersData.sortOutput(output, task.sort);\n    }\n    this.tasks[task.id] = null; //Clean up our task, not needed any longer\n    resolve({\n      data: output\n    });\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} threadId - Internal use id for this thread\n  * @param {object} task - Provided library functionality options for this task\n  * @param {worker} hamster - Thread to train\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(threadId, task, hamster, resolve, reject) {\n    let pool = this;\n    // Handle successful response from a thread\n    function onThreadResponse(message) {\n      let results = message.data;\n      pool.running.splice(pool.running.indexOf(threadId), 1); //Remove thread from running pool\n    \ttask.workers.splice(task.workers.indexOf(threadId), 1); //Remove thread from task running pool\n      // String only communcation for rn...in 2k18\n      if(hamstersHabitat.reactNative) {\n        task.output[threadId] = JSON.parse(results.data);\n      } else {\n        task.output[threadId] = results.data;\n      }\n      if (task.workers.length === 0 && task.count === task.threads) {\n        pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (pool.pending.length !== 0) {\n        pool.processQueue(pool.pending.shift(), hamster);\n      } else if (!hamstersHabitat.persistence && !hamstersHabitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    }\n    // Handle error response from a thread\n    function onThreadError(error) {\n      hamstersLogger.errorFromThread(error, reject);\n    }\n    // Register on message/error handlers\n    if (hamstersHabitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = onThreadError;\n      hamster.port.onerror = onThreadError;\n    } else if(hamstersHabitat.node && typeof hamstersHabitat.parentPort !== 'undefined') {\n      hamster.parentPort.onmessage = onThreadResponse;\n      hamstersHabitat.parentPort.onmessageerror = onThreadError;\n      hamstersHabitat.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = onThreadError;\n      hamster.onerror = onThreadError;\n    }\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Scaffold to execute login within\n  * @param {number} maxThreads - Maximum number of threads for this client\n  */\n  scheduleTask(task) {\n  \treturn new Promise((resolve, reject) => {\n      let threadArrays = [];\n      if(task.input.array && task.threads !== 1) {\n        threadArrays = hamstersData.splitArrays(task.input.array, task.threads); //Divide our array into equal array sizes\n      }\n      let i = 0;\n      while (i < task.threads) {\n      \tif(threadArrays && task.threads !== 1) {\n        \tthis.hamsterWheel(threadArrays[i], task, resolve, reject);\n\t\t    } else {\n        \tthis.hamsterWheel(task.input.array, task, resolve, reject);\n\t\t    }\n        i += 1;\n      }\n    });\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nclass memoizer {\n  \n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.maxCacheEntries = 25;\n    this.cacheEntries = [];\n    this.itemCached = this.isItemCached;\n    this.fetchItem = this.fetchItemFromCache;\n    this.saveItem = this.saveItemToCache;\n  }\n\n  /**\n  * @function isItemCached - Checks for existing data in cache\n  * @param {object} input - Provided library execution options\n  * @param {method} functionToRun - Function to execute\n  * @return {object} Execution results from cache, or false\n  */\n  isItemCached(input, method) {\n  \treturn !!(this.fetchItem({fn: method, data: input})) || false;\n  }\n\n  /**\n  * @function fetchItemFromCache - Fetches cache item from cache\n  * @param {object} cacheItem - Cache item to fetch\n  * @return {object} CacheResults, or false\n  */\n  fetchItemFromCache(cacheItem) {\n  \tlet cachedResult = null;\n    let key = null;\n    for(key of Object.keys(this.cacheEntries)) {\n      if((cacheItem[key].fn === cacheItem.fn) && (cacheItem[key].input === cacheItem.data)) {\n        cachedResult = cacheItem[key].input;\n      }\n    }\n  \treturn cachedResult || false;\n  }\n\n  /**\n  * @function isItemCached - Checks for existing data in cache\n  * @param {method} functionToRun - Function to execute\n  * @param {object} data - Execution results to cache\n  */\n  saveItemToCache(method, data, maxCacheEntries) {\n  \tlet itemToCache = {\n  \t\tfn: method,\n  \t\tinput: data\n  \t};\n  \tlet cachedItems = this.cacheEntries;\n  \tif(cachedItems.length < maxCacheEntries) {\n  \t\tcachedItems.push(itemToCache);\n  \t} else {\n  \t\tcachedItems.splice(0, 0, itemToCache); \n  \t}\n  \tthis.cacheEntries = cachedItems;\n  }\n}\n\nvar hamstersMemoizer = new memoizer();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersMemoizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/memoizer.js"],"sourceRoot":""}